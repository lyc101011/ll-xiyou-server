-- @Author: baidwwy
-- @Date:   2024-07-01 11:50:44
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-10-18 16:22:40
local ffi = require("ffi")
local 数据数量 = ffi.new("int[1]")
local 线程发送数据 = {}

local 定时器 = class()

function 定时器:初始化(v,循环文件)
	self.线程 = require("ggethread")(循环文件)
	self.线程.消息返回 = function(self,...)
		if ... == "取数量指针" then
			return tonumber(ffi.cast("intptr_t",数据数量))
		elseif ... == "取数据" then
			local r = 线程发送数据[1]
			if 线程发送数据[1][1] == 1 then
				local 参战id = 线程发送数据[1][2]
				local 战斗id = 线程发送数据[1][3]
				local 玩家id = 线程发送数据[1][4]
				local PK战斗 = 线程发送数据[1][5]
				table.remove(线程发送数据, 1)
				-- print(战斗id,战斗准备类.战斗盒子[战斗id],玩家数据[玩家id],"===============6546463")
				-- if 战斗准备类.战斗盒子[战斗id] == nil then return end
				-- if 战斗准备类.战斗盒子[战斗id].参战单位[参战id] == nil then return end
				local 参战单位 =  战斗准备类.战斗盒子[战斗id].参战单位[参战id]
				if 参战单位.气血<0 then 参战单位.气血=0 end
				if 参战单位.魔法<0 then 参战单位.魔法=0 end
				if 参战单位.类型=="角色" and 玩家数据[玩家id]~=nil then
					if 参战单位.气血<=0 then
						玩家数据[玩家id].角色:死亡处理(PK战斗)
					else
						玩家数据[玩家id].角色.愤怒= 参战单位.愤怒
						玩家数据[玩家id].角色:刷新信息()
						if 参战单位.气血<玩家数据[玩家id].角色.最大气血 then
							玩家数据[玩家id].角色.气血= 参战单位.气血
						end
						if 参战单位.气血上限< 玩家数据[玩家id].角色.最大气血 then
							玩家数据[玩家id].角色.气血上限= 参战单位.气血上限
						end
						if 参战单位.魔法< 玩家数据[玩家id].角色.最大魔法 then
							玩家数据[玩家id].角色.魔法= 参战单位.魔法
						end
					end
					local 恢复id=玩家数据[玩家id].角色:取任务(10)
					if 恢复id~=0 then
						-- local 恢复id=玩家数据[玩家id].角色:取任务(10)
						if 玩家数据[玩家id].角色.气血<玩家数据[玩家id].角色.最大气血 then
							if 任务数据[恢复id].气血>0 then
								 if 任务数据[恢复id].气血>玩家数据[玩家id].角色.气血上限-玩家数据[玩家id].角色.气血 then
									任务数据[恢复id].气血=任务数据[恢复id].气血-(玩家数据[玩家id].角色.气血上限-玩家数据[玩家id].角色.气血)
									玩家数据[玩家id].角色.气血=玩家数据[玩家id].角色.最大气血
									玩家数据[玩家id].角色.气血上限=玩家数据[玩家id].角色.最大气血
								else
									玩家数据[玩家id].角色.气血=玩家数据[玩家id].角色.气血+任务数据[恢复id].气血
									玩家数据[玩家id].角色.气血上限=玩家数据[玩家id].角色.最大气血
									任务数据[恢复id].气血=0
								end
								if 任务数据[恢复id].气血==0 and 任务数据[恢复id].魔法==0 then
									玩家数据[玩家id].角色:取消任务(恢复id)
								end
							end
						end
						if 玩家数据[玩家id].角色.魔法<玩家数据[玩家id].角色.最大魔法 then
							if 任务数据[恢复id].魔法>0 then
								if 任务数据[恢复id].魔法>玩家数据[玩家id].角色.最大魔法-玩家数据[玩家id].角色.魔法 then
									任务数据[恢复id].魔法=任务数据[恢复id].魔法-(玩家数据[玩家id].角色.最大魔法-玩家数据[玩家id].角色.魔法)
									玩家数据[玩家id].角色.魔法=玩家数据[玩家id].角色.最大魔法
								else
									玩家数据[玩家id].角色.魔法=玩家数据[玩家id].角色.魔法+任务数据[恢复id].魔法
									任务数据[恢复id].魔法=0
								end
								if 任务数据[恢复id].气血==0 and 任务数据[恢复id].魔法==0 then
									玩家数据[玩家id].角色:取消任务(恢复id)
								end
							end
						end
						玩家数据[玩家id].角色:刷新任务跟踪()
					end
				else
					if 玩家数据[玩家id]~=nil then
						if 参战单位.气血<=0 then
							玩家数据[玩家id].召唤兽:死亡处理(参战单位.认证码)
							玩家数据[玩家id].召唤兽:刷新信息(参战单位.认证码,"1")
						else
							local 恢复id=玩家数据[玩家id].角色:取任务(10)
							local 编号=玩家数据[玩家id].角色:取参战宝宝编号()
							if 编号~=0 then
								if 恢复id~=0 then
									玩家数据[玩家id].召唤兽.数据[编号].气血=玩家数据[玩家id].召唤兽.数据[编号].最大气血
									玩家数据[玩家id].召唤兽.数据[编号].魔法=玩家数据[玩家id].召唤兽.数据[编号].最大魔法
								else
									玩家数据[玩家id].召唤兽.数据[编号].气血=qz(参战单位.气血)
									玩家数据[玩家id].召唤兽.数据[编号].魔法=qz(参战单位.魔法)
								end
							end
							玩家数据[玩家id].召唤兽:刷新信息(参战单位.认证码)
						end
					end
				end
			elseif 线程发送数据[1][1] == 2 then --正常退出

				local 战斗id = 线程发送数据[1][2]
				table.remove(线程发送数据, 1)
				if 战斗准备类.战斗盒子[战斗id] then --估计是清空重复了，所以，客户端会闪退
					local 参战玩家 =  战斗准备类.战斗盒子[战斗id].参战玩家
					for n=1,#参战玩家 do
						if 玩家数据[参战玩家[n].id]~=nil then
							玩家数据[参战玩家[n].id].遇怪时间=os.time()+取随机数(10,20)
							发送数据(参战玩家[n].连接id,5505)
							发送数据(玩家数据[参战玩家[n].id].连接id,31,玩家数据[参战玩家[n].id].角色:取总数据1())
							玩家数据[参战玩家[n].id].zhandou=0
							玩家数据[参战玩家[n].id].道具:重置法宝回合(参战玩家[n].id)
							玩家数据[参战玩家[n].id].角色.战斗开关=false
							 地图处理类:设置战斗开关(参战玩家[n].id,false)
							if 玩家数据[参战玩家[n].id].战斗对话~=nil then
								发送数据(玩家数据[参战玩家[n].id].连接id,1501,玩家数据[参战玩家[n].id].战斗对话)
							end
							-- if 战斗准备类.战斗盒子[战斗id].战斗类型==100011 then
							-- 	发送数据(玩家数据[参战玩家[n].id].连接id,1501,对话数据)
							-- end

							玩家数据[参战玩家[n].id].战斗对话=nil
							if 参战玩家[n].断线 then
								系统处理类:断开游戏(参战玩家[n].id)
							end
						end
					end
					--耐久检测
					if 战斗准备类.战斗盒子[战斗id] and 战斗准备类.战斗盒子[战斗id].参战单位  then
						local czdw=战斗准备类.战斗盒子[战斗id].参战单位
						for i=1,#czdw do
							if czdw[i] and czdw[i].类型=="角色" and 玩家数据[czdw[i].玩家id] then
								local 数字id=czdw[i].玩家id
								local 发送 = false
								for n, v in pairs(玩家数据[数字id].角色.装备) do --这个是穿戴的装备
									local 格子 = 玩家数据[数字id].角色.装备[n]
									if 玩家数据[数字id].道具.数据 and 玩家数据[数字id].道具.数据[格子] ~= nil then
										if 玩家数据[数字id].道具.数据[格子].临时附魔 ~= nil  then
											for k,v in pairs(玩家数据[数字id].道具.数据[格子].临时附魔) do
												if v.数值 and v.时间 < os.time() then
													 玩家数据[数字id].角色:清除装备附魔属性(玩家数据[数字id].道具.数据[格子],玩家数据[数字id].道具.数据[格子].分类,k,v.数值)
													 玩家数据[数字id].道具.数据[格子].临时附魔[k] = nil
													 常规提示(数字id,"#Y你装备上的附魔特效消失了！")
												end
											end
										end
										local kdnj = true
										if 玩家数据[数字id].道具.数据[格子].特效~=nil and type(玩家数据[数字id].道具.数据[格子].特效)=="table" then
											for abk,abv in pairs(玩家数据[数字id].道具.数据[格子].特效) do
												if abv == "永不磨损" then
													kdnj = false
													break
												end
											end
										end
										if 玩家数据[数字id].道具.数据[格子].耐久 ~= nil and kdnj then
											-- 2、武器：物理攻击每8下掉1点耐久(横扫千军算3下攻击)；
											--      武器： 施法每20下掉1点耐久(包括封印、治疗、其他辅助技能等)
											-- 1、大唐官府门派特色：装备耐久消耗速度减半
											-- 2、阴曹地府经脉-百炼：武器耐久消耗降低50%
											-- 3、五庄观经脉-锤炼：武器耐久损失速度降低40%
											if 玩家数据[数字id].角色.门派=="大唐官府" then
												czdw[i].耐久计算.攻击=czdw[i].耐久计算.攻击*0.5
												czdw[i].耐久计算.施法=czdw[i].耐久计算.施法*0.5
												czdw[i].耐久计算.挨打=czdw[i].耐久计算.挨打*0.5
											end
											if n==3 then
												if czdw[i].耐久计算.攻击>0 then
													local xishu=1
													if 玩家数据[数字id].角色.门派=="阴曹地府" and czdw[i].JM.百炼==1 then
														xishu=0.5
													elseif 玩家数据[数字id].角色.门派=="五庄观" and czdw[i].JM.锤炼==1 then
														xishu=0.6
													end
													玩家数据[数字id].道具.数据[格子].耐久=玩家数据[数字id].道具.数据[格子].耐久-czdw[i].耐久计算.攻击/8*xishu
												end
												if czdw[i].耐久计算.施法>0 then
													玩家数据[数字id].道具.数据[格子].耐久=玩家数据[数字id].道具.数据[格子].耐久-czdw[i].耐久计算.施法/20
												end
											else
												if czdw[i].耐久计算.挨打>0 then
													玩家数据[数字id].道具.数据[格子].耐久=玩家数据[数字id].道具.数据[格子].耐久-czdw[i].耐久计算.挨打/10
												end
											end

											if 玩家数据[数字id].道具.数据[格子].耐久 and 玩家数据[数字id].道具.数据[格子].耐久 <= 0 then
												玩家数据[数字id].道具.数据[格子].耐久=0
												local 道具格子=玩家数据[数字id].角色:取道具格子1("道具")
												if 道具格子~=0 and 玩家数据[数字id].道具.数据[格子] and 玩家数据[数字id].道具.数据[格子].分类 and 玩家数据[数字id].道具.数据[格子].分类<=6 then
													玩家数据[数字id].角色:卸下装备(玩家数据[数字id].道具.数据[格子],玩家数据[数字id].道具.数据[格子].分类)
													玩家数据[数字id].角色.装备[n]=nil
													玩家数据[数字id].角色["道具"][道具格子]=格子
													玩家数据[数字id].角色:刷新信息()
													玩家数据[数字id].道具:刷新道具行囊(数字id,"道具")
													发送数据(玩家数据[数字id].连接id,3503,玩家数据[数字id].角色:取装备数据())
													if n==3 then
														发送数据(玩家数据[数字id].连接id,3505)
														地图处理类:更新武器(数字id)
													end
													发送数据(玩家数据[数字id].连接id,12)
												end
												常规提示(数字id,"#Y你的装备耐久度不足请及时修理！")
											end
										end
									end
								end

								for k,v in pairs(玩家数据[数字id].角色.灵饰) do
									if 玩家数据[数字id].道具.数据 and 玩家数据[数字id].道具.数据[v] ~= nil then
										--1、灵饰、防具(除武器外的部位)：每被物理攻击10下掉1点耐久(被法术攻击不掉耐久)
										if czdw[i].耐久计算.挨打>0 then
											玩家数据[数字id].道具.数据[v].耐久=玩家数据[数字id].道具.数据[v].耐久-czdw[i].耐久计算.挨打/10
										end
										if 玩家数据[数字id].道具.数据[v].耐久<=0 then
											玩家数据[数字id].道具.数据[v].耐久=0
											local 道具格子=玩家数据[数字id].角色:取道具格子1("道具")
											if 道具格子~=0 then
												玩家数据[数字id].角色:卸下灵饰(玩家数据[数字id].道具.数据[v])
												玩家数据[数字id].角色["道具"][道具格子]=v
												玩家数据[数字id].角色.灵饰[k]=nil
												--self:刷新道具行囊(数字id,数据.类型)
												发送数据(玩家数据[数字id].连接id,3506,玩家数据[数字id].角色:取灵饰数据())
												发送数据(玩家数据[数字id].连接id,47,{玩家数据[数字id].角色:取气血数据()})
												发送数据(玩家数据[数字id].连接id,12)
												常规提示(数字id,"#Y你的灵饰耐久度不足请及时修理！")
											end
										end
									end
								end
							end
						end
					end
					-- if 战斗准备类.战斗盒子[战斗id].战斗类型==100019 and 战斗准备类.战斗盒子[战斗id].玩家胜利 and 取随机数()<=2 then
					-- 	local id=战斗准备类.战斗盒子[战斗id].进入战斗玩家id
					-- 	if 玩家数据[id].角色.地图数据.编号~=1620 then
					-- 		local 随机递增=取随机数(1,3)
					-- 		local 传送地图= 玩家数据[id].角色.地图数据.编号+随机递增
					-- 		if 传送地图>1620 then
					-- 			传送地图=1620
					-- 		end
					-- 		local xy=地图处理类.地图坐标[传送地图]:取随机点()
					-- 		地图处理类:跳转地图(id,传送地图,xy.x,xy.y)
					-- 		常规提示(id,"#Y你击败了迷宫小怪后，意外地发现自己来到了#R"..取地图名称(传送地图))
					-- 	end
					-- end
					-- 战斗准备类.战斗盒子[战斗id]=nil
					战斗准备类.战斗盒子[战斗id].结束条件 = true
					if 战斗准备类.战斗盒子[战斗id].下场战斗序号 ~= 0 then
						战斗准备类:创建战斗(战斗准备类.战斗盒子[战斗id].进入战斗玩家id,战斗准备类.战斗盒子[战斗id].下场战斗序号,战斗准备类.战斗盒子[战斗id].任务id)
					elseif 战斗准备类.战斗盒子[战斗id].连续战斗  then
						战斗准备类:创建战斗(战斗准备类.战斗盒子[战斗id].进入战斗玩家id,战斗准备类.战斗盒子[战斗id].连续战斗,战斗准备类.战斗盒子[战斗id].任务id)
					end
				end

			elseif 线程发送数据[1][1] == 3 then --BUG退出
				local 战斗id = 线程发送数据[1][2]
				table.remove(线程发送数据, 1)
				if not 战斗准备类.战斗盒子[战斗id] then return unpack(r) end
				local 参战玩家 =  战斗准备类.战斗盒子[战斗id].参战玩家
				for n=1,#参战玩家 do
					if 玩家数据[参战玩家[n].id]~=nil then
						玩家数据[参战玩家[n].id].遇怪时间=os.time()+取随机数(10,20)
						发送数据(参战玩家[n].连接id,5505)
						发送数据(玩家数据[参战玩家[n].id].连接id,31,玩家数据[参战玩家[n].id].角色:取总数据1())
						玩家数据[参战玩家[n].id].zhandou=0
						玩家数据[参战玩家[n].id].道具:重置法宝回合(参战玩家[n].id)
						--self.参战单位[n].耐久计算 = {攻击=0,施法=0,挨打=0}
						玩家数据[参战玩家[n].id].角色.战斗开关=false
						 地图处理类:设置战斗开关(参战玩家[n].id,false)
						if 玩家数据[参战玩家[n].id].战斗对话~=nil then
							发送数据(玩家数据[参战玩家[n].id].连接id,1501,玩家数据[参战玩家[n].id].战斗对话)
						end
						-- if 战斗准备类.战斗盒子[战斗id].战斗类型==100011 then
						-- 	发送数据(玩家数据[参战玩家[n].id].连接id,1501,对话数据)
						-- end
						玩家数据[参战玩家[n].id].战斗对话=nil
						if 参战玩家[n].断线 then
							系统处理类:断开游戏(参战玩家[n].id)
						end
					end
				end
				战斗准备类.战斗盒子[战斗id]=nil
			end
			return unpack(r)
		elseif ... == "循环更新" then
			战斗准备类:更新()
		else
			print("线程返回",...)
		end
	end
	self:启动(v)
end

function 定时器:启动(v)
	self.线程:启动(v)
	self.线程:置延迟(v)
end

function 定时器:发送(...)--这里是不定数据,如果是固定的,可以参考客户的多线程 纹理
	数据数量[0] = 数据数量[0]+1
	table.insert(线程发送数据,{...})
end

return 定时器