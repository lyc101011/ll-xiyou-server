-- @Author: baidwwy
-- @Date:   2024-11-14 12:45:49
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2025-03-08 11:47:12
-- @Author: baidwwy
-- @Date:   2024-09-08 18:21:27
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2024-12-13 20:43:57
local 系统处理类 = class()
function 系统处理类:初始化() end
function 系统处理类:数据处理(id,序号,内容)
	if 序号==1 then
		self:账号验证(id,序号,内容)
	elseif 序号==1.1 then --创建账号
			if 注册kaiguan==false then
				发送数据(id,7,"#Y/注册账号需与管理员联系。")
				 return
			end
		self:创建账号(id,序号,内容)
	elseif 序号==2 then -- 申请创建角色
		if f函数.文件是否存在(程序目录..[[data/]]..内容.账号)==false then  --未创建存档
			发送数据(id,3)
		else
			self.临时文件=读入文件(程序目录..[[data/]]..内容.账号..[[/信息.txt]])
			self.写入信息=table.loadstring(self.临时文件)
			if #self.写入信息>=6 then
				发送数据(id,7,"#Y/您无法再创建更多的角色了")
				return 0
			end
			发送数据(id,3)
		end
	elseif 序号==3 then --创建新角色
		for k,v in pairs(名称数据) do
			if 内容.名称==v.名称 then
				发送数据(id,7,"#Y/这个名称已经被他人占用了，请重新再想个吧")
				 return
			end
		 end
		if f函数.文件是否存在(程序目录..[[data/]]..内容.账号)==false then  --未创建存档
			--创建新的账号数据
			if lfs.mkdir(程序目录..[[data/]]..内容.账号)==false then
				发送数据(id,7,"#Y/建立存档失败，错误代号1001")
				return 0
			end
			写出文件([[data/]]..内容.账号..[[/账号信息.txt]],"")
			临时角色=角色处理类.创建()
			临时角色:创建角色(id,内容.账号,内容.模型,内容.名称,内容.ip,内容.染色ID)
			名称数据[#名称数据+1]={名称=内容.名称,id=全局角色id,账号=内容.账号}
			写出文件([[sql/名称数据.txt]],table.tostring(名称数据))
			临时角色=nil
			self:取角色选择信息(id,内容.账号)
		else
			self.临时文件=读入文件(程序目录..[[data/]]..内容.账号..[[/信息.txt]])
			self.写入信息=table.loadstring(self.临时文件)
			if #self.写入信息>=6 then
				发送数据(id,7,"#Y/您无法再创建更多的角色了")
				return 0
			end
			临时角色=角色处理类.创建()
			临时角色:创建角色(id,内容.账号,内容.模型,内容.名称,内容.ip,内容.染色ID)
			名称数据[#名称数据+1]={名称=内容.名称,id=全局角色id,账号=内容.账号}
			写出文件([[sql/名称数据.txt]],table.tostring(名称数据))
			临时角色=nil
			self:取角色选择信息(id,内容.账号)
		end

		local sdtdw=table.loadstring(读入文件([[data/]]..内容.账号..[[/信息.txt]]))
			for n=1,#sdtdw do
				if 玩家数据[sdtdw[n]] and not 玩家数据[sdtdw[n]].zhuzhan then
				  助战处理类:加载助战列表(sdtdw[n])
				end
			end

	elseif 序号==4 then --选择角色
		local dtyz = 内容.id * os.date("%H", os.time()) / os.date("%M", os.time()) + os.time() - 内容.id
		if self:账号验证id(内容.账号,tonumber(内容.id))==dtyz then --验证防CE修改
			self:进入游戏(id,内容.账号,内容.id,内容.ip)
		end
		-- self:进入游戏(id,内容.账号,内容.id,内容.ip)
	elseif 序号==5 then
		if 玩家数据[内容+0]~=nil and 玩家数据[内容+0].顶号进入 and 玩家数据[内容+0].顶号进入 - os.time() >= 0 then --分角色 pc顶号（序号5：断开游戏）正常，安卓断开却发送5让玩家数据nil了，所以加这个
		    玩家数据[内容+0].顶号进入 = nil
		    return
		end
		self:断开游戏(内容+0)
	elseif 序号==6 then
		if 玩家数据[内容.数字id].角色.宠物.领养次数==0 then
			玩家数据[内容.数字id].角色.宠物={模型=内容.cw,名称=内容.cw,等级=1,最大等级=120,耐力=5,最大耐力=5,经验=1,最大经验=10,领养次数=1}
			发送数据(id,7,"#Y/领养宠物成功")
			发送数据(id,8,玩家数据[内容.数字id].角色.宠物)
		else
			发送数据(id,7,"#Y/您当前无法再领取宠物了")
		end
	elseif 序号==7 then
		发送数据(id,10,玩家数据[内容.数字id].角色:取总数据1())
	elseif 序号==8 then
		玩家数据[内容.数字id].角色:添加属性点(内容,id)
		发送数据(id,10,玩家数据[内容.数字id].角色:取总数据1())
	elseif 序号==9 then
		玩家数据[内容.数字id].角色:升级处理(id)
	elseif 序号==10 then
		玩家数据[内容.数字id].角色:获取任务信息(id)
	elseif 序号==11 then
		玩家数据[内容.数字id].角色:设置快捷技能(内容)
	elseif 序号==11.1 then
		if 玩家数据[内容.数字id].角色.坐骑==nil then
			-- 常规提示(内容.数字id,"#Y/请先骑乘你要飞的坐骑")
			-- return
		end
		local 序号=1
		if 内容.位置=="F1" then
			序号=1
		elseif 内容.位置=="F2" then
			序号=2
		elseif 内容.位置=="F3" then
			序号=3
		elseif 内容.位置=="F4" then
			序号=4
		elseif 内容.位置=="F5" then
			序号=5
		elseif 内容.位置=="F6" then
			序号=6
		elseif 内容.位置=="F7" then
			序号=7
		elseif 内容.位置=="F8" then
			序号=8
		end
		玩家数据[内容.数字id].角色:设置快捷技能({名称=" 飞行 ",类型=4,位置=序号})
		常规提示(内容.数字id,"#Y/设置成功...")
	 elseif 序号==11.2 then --坐骑主属性 确认
		玩家数据[内容.数字id].角色:坐骑主属性选择(内容)
		 return
	elseif 序号==11.3 then --坐骑放生
		玩家数据[内容.数字id].角色:坐骑放生(内容[1])
		 return
	elseif 序号==12 then
		发送数据(id,41,玩家数据[内容.数字id].角色.快捷技能)
	elseif 序号==13 then
		玩家数据[内容.数字id].角色:使用快捷技能(内容.序列)
	elseif 序号==14 then
		local id=内容.数字id
		if 内容.人物~=nil then
			玩家数据[id].角色.修炼.当前=内容.人物
		end
		if 内容.bb~=nil then
			玩家数据[id].角色.bb修炼.当前=内容.bb
		end
		常规提示(id,"#Y/更换修炼类型成功！")
		刷新修炼数据(id)
	elseif 序号==15 then
		local id=内容.数字id
		if 玩家数据[id].角色.自动遇怪 then
			玩家数据[id].角色.自动遇怪=false
			常规提示(id,"#Y/你关闭了自动遇怪功能")
		else
			玩家数据[id].角色.自动遇怪=true
			常规提示(id,"#Y/你开启了自动遇怪，每隔30秒会自动触发野外场景暗雷战斗。请确保没有使用摄妖香状态。如需关闭此功能，请使用ALT+Z组合键。")
		end
		发送数据(玩家数据[id].连接id,48,{遇怪=玩家数据[id].角色.自动遇怪})
	elseif 序号==26 then
		local 序列=内容.序列
		local id=内容.数字id
		if 玩家数据[id].角色.坐骑列表[序列]==nil then
			常规提示(id,"#Y你没有这样的坐骑")
			return
		end
		玩家数据[id].角色.坐骑=table.copy(玩家数据[id].角色.坐骑列表[序列])
		常规提示(id,"#Y骑乘坐骑成功！")
		玩家数据[id].角色:刷新信息("33")
		发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.坐骑)
		地图处理类:更新坐骑(id,玩家数据[id].角色.坐骑)
		return
	elseif 序号==27 then
		local id=内容.数字id
		if 玩家数据[id].队伍~=0 then
			 if 玩家数据[id].角色.飞行中 then --队伍飞行中禁止下坐骑
				常规提示(id,"#Y队伍飞行中禁止此操作！")
				 return
			end
		else
			if 玩家数据[id].角色.飞行中 then
				玩家数据[id].角色.飞行中=nil
				常规提示(id,"#Y/你落地了...")
				地图处理类:玩家是否飞行(id,false)
			end
		end
		玩家数据[id].角色.坐骑=nil
		常规提示(id,"#Y下乘坐骑成功！")
		玩家数据[id].角色:刷新信息("33")
		发送数据(玩家数据[id].连接id,60,玩家数据[id].角色.坐骑)
		地图处理类:更新坐骑(id,玩家数据[id].角色.坐骑)
	elseif 序号==28 then
		玩家数据[内容.数字id].角色:取快捷技能(内容.数字id)
	elseif 序号==29 then
		商城处理类:取商品组数据(内容.数字id, 18)
	elseif 序号==30 then
		商城处理类:数据处理(内容.数字id, 内容)
	elseif 序号==31 then
		地图处理类:更新称谓(内容.数字id,内容.称谓ID)
	elseif 序号==74 then
		玩家数据[内容.数字id].角色:删除称谓(内容.称谓)
	elseif 序号==32 then
		玩家数据[内容.数字id].角色:增加奇经八脉(内容.数字id,内容.序列)

	-- elseif 序号==33.1 then --PK台PK
	-- 	local 自己id = 内容.数字id
	-- 	local 对手id = 内容.序列
	-- 	if 玩家数据[自己id].队伍~=0 and 玩家数据[自己id].队长==false  then
	-- 		常规提示(自己id,"只有队长才可以进行切磋")
	-- 	    return
	-- 	end
	-- 	战斗准备类:创建玩家战斗(自己id, 200001, 对手id, 1001)
	-- elseif 序号==33.2 then --PK台PK 单挑模式
	-- 	local 自己id = 内容.数字id
	-- 	local 对手id = 内容.序列
	-- 	if 玩家数据[自己id].队伍~=0 and 玩家数据[自己id].队长==false  then
	-- 		常规提示(自己id,"只有队长才可以进行切磋")
	-- 	    return
	-- 	end
	-- 	战斗准备类:创建玩家战斗(自己id, 200001, 对手id, 1001, true)
	 -- elseif 序号==33.3 then --勾魂索PK
	 -- 	local 数字id = 内容.数字id
	 -- 	for k,v in pairs(勾魂索名单) do
	 -- 		if v.倒计时开始 then
	 -- 		    if v.主动==数字id or v.被动==数字id  then
	 -- 		        v.战斗开始 = true
	 -- 		        break
	 -- 		    end
	 -- 		end
	 -- 	end

	elseif 序号==34 then
		玩家数据[内容.数字id].角色:炼化乾元丹(内容.数字id)
		-------------------------帮派
	elseif 序号==35 then
		帮派处理:创建帮派(内容.数字id,内容)
	elseif 序号==36 then --帮派界面打开 --暂时不拆分数据，后期再说
		local bpbh = 玩家数据[内容.数字id].角色.BPBH
		if 帮派数据[bpbh] and 取所有帮派[bpbh].已解散==nil then
			发送数据(玩家数据[内容.数字id].连接id,205,帮派数据[bpbh])
		else
			常规提示(内容.数字id,"请先加入一个帮派。")
		end
	elseif 序号==37 then --解散帮派 再次确认
		发送数据(玩家数据[内容.数字id].连接id,103)
	elseif 序号==37.1 then --解散帮派
		帮派处理:解散帮派(内容.数字id)
	elseif 序号==37.2 then --解散帮派
		帮派处理:退出帮派(内容.数字id)
	elseif 序号==38 then
		帮派处理:加入帮派2(内容.数字id,内容.编号)
	elseif 序号==38.1 then
		帮派处理:取消申请(内容.数字id,内容.编号)
		elseif 序号==39 then
	 发送数据(玩家数据[内容.数字id].连接id,49,排行榜数据)
	elseif 序号==40 then
		帮派处理:清空申请(内容.数字id)
	elseif 序号==41 then
		帮派处理:玩家数据变更(内容)
	elseif 序号==42 then
		帮派处理:帮派建筑研究(内容)
	elseif 序号==43 then
		帮派处理:帮派规模提升(内容.数字id)
		-------------------------帮派
	elseif 序号==44 then
		if 内容.免资材~=nil then
			 玩家数据[内容.数字id].角色:帮派免资材学习修炼(内容.类型,内容.修炼项目)
		else
			玩家数据[内容.数字id].角色:帮派学习修炼(内容.类型,内容.修炼项目)
		end
	elseif 序号==45 then
		玩家数据[内容.数字id].角色:帮派学习生活技能(内容.序列)
	elseif 序号==46 then --炫彩
		if 玩家数据[内容.数字id].角色:扣除银子(5000000,0,0,"人物炫彩",1)  then
			if 玩家数据[内容.数字id].角色.炫彩 == nil then
			玩家数据[内容.数字id].角色.炫彩 = 玩家数据[内容.数字id].角色.染色方案
			玩家数据[内容.数字id].角色.炫彩组 ={}
			end
			玩家数据[内容.数字id].角色.炫彩组=内容.炫彩
			常规提示(内容.数字id,"角色染色成功")
			发送数据(玩家数据[内容.数字id].连接id,213,{炫彩=玩家数据[内容.数字id].角色.炫彩,炫彩组=玩家数据[内容.数字id].角色.炫彩组})
			地图处理类:更改炫彩(内容.数字id,玩家数据[内容.数字id].角色.炫彩,玩家数据[内容.数字id].角色.炫彩组)
		end
	elseif 序号==47 then --取消炫彩
		if 内容.shij=="角色焕彩" then
			玩家数据[内容.数字id].角色.炫彩=nil
			玩家数据[内容.数字id].角色.炫彩组 =nil
			常规提示(内容.数字id,"还原焕彩成功，重新上线即可生效")
		elseif 内容.shij=="坐骑焕彩" then
			local 临时编号=玩家数据[内容.数字id].角色:取坐骑编号(内容.认证码)
			if 临时编号==0 then
				常规提示(内容.数字id,"你没有这只坐骑")
				return
			else
				玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩 =nil
				玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩组 = nil
				常规提示(内容.数字id,"还原焕彩成功，重新上线即可生效")
				if 玩家数据[内容.数字id].角色.坐骑 and 玩家数据[内容.数字id].角色.坐骑.认证码 == 内容.认证码 then
					玩家数据[内容.数字id].角色.坐骑=table.loadstring(table.tostring(玩家数据[内容.数字id].角色.坐骑列表[临时编号]))
				end
			end
		elseif 内容.shij=="召唤兽焕彩" then
			local 临时编号=玩家数据[内容.数字id].召唤兽:取编号(内容.认证码)
			if 临时编号==0 then
				常规提示(内容.数字id,"你没有这只召唤兽")
				return
			else
				玩家数据[内容.数字id].召唤兽.数据[临时编号].染色方案 = nil
				玩家数据[内容.数字id].召唤兽.数据[临时编号].染色组 = nil
				常规提示(内容.数字id,"还原焕彩成功")
			end
		end

	elseif 序号==67 then
		if 玩家数据[内容.数字id].角色:扣除银子(5000000,0,0,"坐骑炫彩",1)  then
			local 临时编号=玩家数据[内容.数字id].角色:取坐骑编号(内容.认证码)
			if 临时编号==0 then
				常规提示(内容.数字id,"你没有这只坐骑")
				return
			else
				if 玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩 == nil then
					玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩 = 内容.染色id
					玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩组 = {}
				end
				玩家数据[内容.数字id].角色.坐骑列表[临时编号].炫彩组 = 内容.炫彩
				常规提示(内容.数字id,"坐骑染色成功")
				发送数据(玩家数据[内容.数字id].连接id,61,玩家数据[内容.数字id].角色.坐骑列表)
				if 玩家数据[内容.数字id].角色.坐骑 and 玩家数据[内容.数字id].角色.坐骑.认证码 == 内容.认证码 then
					玩家数据[内容.数字id].角色.坐骑=table.loadstring(table.tostring(玩家数据[内容.数字id].角色.坐骑列表[临时编号]))
				end
				地图处理类:更新坐骑(内容.数字id,玩家数据[内容.数字id].角色.坐骑)
			end
		end

	elseif 序号==48 then --存钱
		local num=内容.JQ+0
		local id=内容.数字id
		if 玩家数据[id].角色.体验状态 then
			常规提示(id,"体验状态下无法进行此操作。")
			return
		end
		if num<0 or (num~=0 and num<1) then
			__S服务:输出("玩家"..id.." 存在作弊行为！！！钱庄存钱")
			写配置("./ip封禁.ini", "ip", 玩家数据[id].角色.ip, 1)
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","封禁","1")
			local 封禁原因=玩家数据[id].角色.ip.."“违规行为：钱庄存钱”存银=="..num.."，玩家ID=="..id.."，玩家账号=="..玩家数据[id].账号.."时间="..os.date("%Y%m%d")..os.date("%H",os.time())..os.date("%S",os.time())
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","已违规1",封禁原因)
			f函数.写配置(程序目录..[[各类情况查看\]]..[[\违规汇总.txt]],"违规详情","已违规1:",封禁原因)
			发送数据(玩家数据[id].连接id, 998, "请注意你的角色异常！已经对你进行封禁")
			__S服务:断开连接(玩家数据[id].连接id)
			return
		end
		num=qz(num)
		if 玩家数据[id].角色:扣除银子(num,0,0,"存款") then
			玩家数据[id].角色.存银=玩家数据[id].角色.存银+num
			常规提示(id,"您已存入"..num.."两银子")
		else
			常规提示(id,"你身上也没那么多钱啊")
		end
	elseif 序号==49 then --取钱
		local num=内容.JQ+0
		local id=内容.数字id
		if num<0 or (num~=0 and num<1) then
			__S服务:输出("玩家"..id.." 存在作弊行为！！！钱庄取钱")
			写配置("./ip封禁.ini", "ip", 玩家数据[id].角色.ip, 1)
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","封禁","1")
			local 封禁原因=玩家数据[id].角色.ip.."“违规行为：钱庄取钱”取钱=="..num.."，玩家ID=="..id.."，玩家账号=="..玩家数据[id].账号.."时间="..os.date("%Y%m%d")..os.date("%H",os.time())..os.date("%S",os.time())
			f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","已违规2",封禁原因)
			f函数.写配置(程序目录..[[各类情况查看\]]..[[\违规汇总.txt]],"违规详情","已违规2:",封禁原因)
			发送数据(玩家数据[id].连接id, 998, "请注意你的角色异常！已经对你进行封禁")
			__S服务:断开连接(玩家数据[id].连接id)
			return
		end
		num=qz(num)
		if 玩家数据[id].角色.存银>=num then
			玩家数据[id].角色.存银=玩家数据[id].角色.存银-num
			玩家数据[id].角色:添加银子(num,"取款",1)
			常规提示(id,"您已取出"..num.."两银子")
		else
			常规提示(id,"存银不足无法取出")
		end
	elseif 序号==50 then
		玩家数据[内容.数字id].角色:重置奇经八脉() --遗忘乾元丹
	elseif 序号==55 then --场景类_商会物品界面
		__S服务:输出(string.format('尝试作弊使用非法数据(%s)',内容.数字id))
	elseif 序号==56 then
	elseif 序号==57 then
		if 玩家数据[内容.数字id].角色.等级 < 10 then
			常规提示(内容.数字id,"#Y/请先将等级提升到10级")
		else
			地图处理类:门派传送(内容.数字id,内容.门派)
			local lssj =  取师傅地图(内容.门派)
			-- 玩家数据[内容.数字id].角色:增加剧情点(1)
			玩家数据[内容.数字id].角色.剧情={主线=2,编号 = 1,地图 = lssj,进度 = 2222,附加={}}
			发送数据(玩家数据[内容.数字id].连接id,227,{剧情=玩家数据[内容.数字id].角色.剧情})
		end
	elseif 序号==59 then
		玩家数据[内容.数字id].角色:坐骑统御(内容)
	elseif 序号==59.1 then
		玩家数据[内容.数字id].角色:取消坐骑统御(内容)
	elseif 序号==60 then
		玩家数据[内容.数字id].角色:坐骑改名(内容)
 elseif 序号==65.1 then
   -- local 银子 = 玩家数据[内容.数字id].角色.银子

        local 银子 = f函数.读配置(程序目录..[[data\]]..玩家数据[内容.数字id].账号..[[\账号信息.txt]],"账号配置","仙玉")+0
    发送数据(玩家数据[内容.数字id].连接id,112.1,{藏宝阁数据,银子})
    if 观察藏宝阁数据 == nil then
      观察藏宝阁数据 = {}
    end
    观察藏宝阁数据[内容.数字id] = 1
  elseif 序号 == 60.1 then
    发送数据(玩家数据[内容.数字id].连接id, 113.1, 玩家数据[内容.数字id].道具:索要道具1(内容.数字id))
  elseif 序号 == 60.2 then
    发送数据(玩家数据[内容.数字id].连接id, 114.1, 玩家数据[内容.数字id].召唤兽.数据)
  elseif 序号 == 60.3 then
    发送数据(玩家数据[内容.数字id].连接id, 115.1, 玩家数据[内容.数字id].角色.银子)
  elseif 序号 == 60.5 then --上架道具
    self:藏宝阁上架(内容.数字id,内容.编号,内容.价格)
  elseif 序号 == 60.6 then --上架召唤兽
    self:藏宝阁上架召唤兽(内容.数字id,内容.编号,内容.价格)
  elseif 序号 == 60.7 then --上架召唤兽
    观察藏宝阁数据[内容.数字id] = nil
  elseif 序号 == 60.8 then --上架银子
    self:藏宝阁上架银两(内容.数字id,内容.编号,内容.价格)
  elseif 序号 == 60.9 then --上架银子
    self:藏宝阁购买处理(内容.数字id,内容.编号,内容.类型)
  elseif 序号 == 60.4 then --上架银子
    self:藏宝阁取回处理(内容.数字id,内容.编号,内容.类型)
  elseif 序号 == 61.1 then --上架角色
  	-- if 玩家数据[内容.数字id].角色.武神坛角色 then
   --    发送数据(玩家数据[内容.数字id].连接id, 7, "#y/武神坛角色滚")
   --    return
   --  end
   --  玩家数据[内容.数字id].角色.藏宝阁出售 = 1
   --  藏宝阁数据.角色[#藏宝阁数据.角色+1] = {所有者=内容.数字id,价格=内容.价格,取回密码=内容.编号,结束时间=os.time()+2592000,角色信息={账号=玩家数据[内容.数字id].账号,模型=玩家数据[内容.数字id].角色.模型,名称=玩家数据[内容.数字id].角色.名称,等级=玩家数据[内容.数字id].角色.等级,门派=玩家数据[内容.数字id].角色.门派}}
   --  玩家数据[内容.数字id].角色:存档()
   --  发送数据(玩家数据[内容.数字id].连接id,998,"#Y上架角色成功,即日起该角色将无法进入游戏,可以使用任意角色在XX处使用取回密码取回账号,请牢记你的取回密码！")
   --  __S服务:连接退出(玩家数据[内容.数字id].连接id)
   --  for i,v in pairs(观察藏宝阁数据) do
   --    if 玩家数据[i] ~= nil then
   --      发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
   --    else
   --      观察藏宝阁数据[i] = nil
   --    end
   --  end

    elseif 序号 == 62.1 then --查看角色
    local id = 内容.数字id
    local 编号 = 内容.编号
    local 名称 = 内容.名称
    if 藏宝阁数据.角色[编号] == nil or 名称 ~= 藏宝阁数据.角色[编号].角色信息.名称 then
      常规提示(id,"#Y数据错误请重新打开藏宝阁")
      return
    end
    local 发送角色信息= {}
    发送角色信息.角色数据 = table.loadstring(读入文件(程序目录..[[data/]]..藏宝阁数据.角色[编号].角色信息.账号..[[/]]..藏宝阁数据.角色[编号].所有者..[[/角色.txt]]))
    发送角色信息.召唤兽数据 = table.loadstring(读入文件(程序目录..[[data/]]..藏宝阁数据.角色[编号].角色信息.账号..[[/]]..藏宝阁数据.角色[编号].所有者..[[/召唤兽.txt]]))
    local 道具数据 = table.loadstring(读入文件(程序目录..[[data/]]..藏宝阁数据.角色[编号].角色信息.账号..[[/]]..藏宝阁数据.角色[编号].所有者..[[/道具.txt]]))
    发送角色信息.装备数据 = {}
    for i=1,6 do
      if 发送角色信息.角色数据.装备[i] ~= nil and 道具数据[发送角色信息.角色数据.装备[i]] ~= nil then
        发送角色信息.装备数据[i] = 道具数据[发送角色信息.角色数据.装备[i]]
      end
    end
    发送角色信息.灵饰数据 = {}
     for i=1,4 do
      if 发送角色信息.角色数据.灵饰[i] ~= nil and 道具数据[发送角色信息.角色数据.灵饰[i]] ~= nil then
        发送角色信息.灵饰数据[i] = 道具数据[发送角色信息.角色数据.灵饰[i]]
      end
    end
    发送数据(玩家数据[id].连接id,117.1,发送角色信息)
    发送角色信息 = nil
    道具数据 = nil

 elseif 序号==68.1 then
    local id = 内容.数字id
    local 目标id = 内容.编号
    local 密码 = 内容.价格
    for i=1,#藏宝阁数据.角色 do
      if 藏宝阁数据.角色[i].所有者 == 目标id or tonumber(藏宝阁数据.角色[i].所有者) == tonumber(目标id) then
        if 藏宝阁数据.角色[i].取回密码 ~= 密码 then
          常规提示(id,"#Y密码错误请重新输入")
          return
        else
          local 角色信息 = table.loadstring(读入文件(程序目录..[[data/]]..藏宝阁数据.角色[i].角色信息.账号..[[/]]..藏宝阁数据.角色[i].所有者..[[/角色.txt]]))
          角色信息.藏宝阁出售 = nil
          写出文件([[data/]]..藏宝阁数据.角色[i].角色信息.账号..[[/]]..藏宝阁数据.角色[i].所有者..[[/角色.txt]],table.tostring(角色信息))
          角色信息 = nil
          table.remove(藏宝阁数据.角色,i)
          for i,v in pairs(观察藏宝阁数据) do
            if 玩家数据[i] ~= nil then
              发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
            else
              观察藏宝阁数据[i] = nil
            end
          end
          常规提示(id,"#Y恭喜角色成功取回,请原账号登录即可!!!")
          return
        end
      end
    end
  elseif 序号 == 63.1 then
           local id = 内容.数字id
          if 寄存数据[id] == nil then
            发送数据(玩家数据[id].连接id, 7, "#y/你没有要取出的物品")
            return
          else
            发送数据(玩家数据[id].连接id,115.2,寄存数据[id])
         end
  elseif 序号 == 63.2 then
          local id = 内容.数字id
          local 编号=内容.编号
          if 寄存数据[id] == nil then
            发送数据(玩家数据[id].连接id, 7, "#y/你没有在我这里寄存物品")
            return
            elseif 寄存数据[id][编号]==nil then
            发送数据(玩家数据[id].连接id, 7, "#y/你没有在我这里寄存物品")
            return
          else
            if 寄存数据[id][编号].类型 == "银子" then
              玩家数据[id].角色:添加银子(寄存数据[id][编号].数额,"藏宝阁出售寄存",1)
              table.remove(寄存数据[id],编号)
              发送数据(玩家数据[id].连接id,7,"#y/已经成功取回")
                if #寄存数据[id] <= 0  then
              寄存数据[id] = nil
            end
            elseif 寄存数据[id][编号].类型 == "物品" then
              self.临时格子=玩家数据[id].角色:取道具格子()
              if self.临时格子==0 then
                发送数据(玩家数据[id].连接id,7,"#y/您当前的包裹空间已满，无法开启")
                return 0
              end
              self.可用id = 玩家数据[id].道具:取新编号()
              玩家数据[id].道具.数据[self.可用id] = 寄存数据[id][编号].物品
              玩家数据[id].角色.道具[self.临时格子] = self.可用id
              table.remove(寄存数据[id],编号)
              发送数据(玩家数据[id].连接id,7,"#y/已经成功取回")
            if #寄存数据[id] <= 0  then
              寄存数据[id] = nil
            end
            elseif 寄存数据[id][编号].类型 == "召唤兽" then
              if #玩家数据[id].召唤兽.数据 >= 7 then
                发送数据(玩家数据[id].连接id,7,"#y/您的召唤兽空间已满，无法购买")
                return 0
              else
                玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据+1] = 寄存数据[id][编号].召唤兽
              end
              table.remove(寄存数据[id],编号)
              发送数据(玩家数据[id].连接id,7,"#y/已经成功取回")
            if #寄存数据[id] <= 0  then
              寄存数据[id] = nil
            end
          end
          end
          发送数据(玩家数据[id].连接id,115.2,寄存数据[id])

	elseif 序号==61 then
		玩家数据[内容.数字id].角色:坐骑驯养(内容)
	elseif 序号==62 then
		if 内容.数字id then
			 写配置("./加速齿轮.txt","加速齿轮",内容.ip,"加速外挂 ID为 "..内容.数字id..时间转换(os.time()))
		end
		 return
	elseif 序号==63 then
		玩家数据[内容.数字id].角色:坐骑技能升级(内容)
	elseif 序号==64 then
		玩家数据[内容.数字id].角色:切换经脉流派(内容.数字id,内容.新流派,内容.旧流派)
	elseif 序号==65 then
	elseif 序号==66 then
		发送数据(id,231,{指引=梦幻指引,每日=每日任务[内容.数字id]})
	elseif 序号==68 then
	elseif 序号==69 then
		self:召唤兽携带上限(内容.数字id)
	elseif 序号==70 then
		if  玩家数据[内容.数字id].角色.招式特效 ~= nil and 玩家数据[内容.数字id].角色.招式特效[内容.名称] ~= nil then
			if 玩家数据[内容.数字id].角色.招式特效[内容.名称] then
				玩家数据[内容.数字id].角色.招式特效[内容.名称] = false
				发送数据(id,7,"#Y/技能#R"..内容.名称.."#Y招式特效已#R关闭")
			else
				玩家数据[内容.数字id].角色.招式特效[内容.名称] = true
				发送数据(id,7,"#Y/技能#R"..内容.名称.."#Y招式特效已#G开启")
			end
			发送数据(玩家数据[内容.数字id].连接id,236,{名称=内容.名称,状态=玩家数据[内容.数字id].角色.招式特效[内容.名称]})
		end
	elseif 序号==71 then
		local 名称=内容.名称
		local 检测=内容.检测
		local 数字id=内容.数字id
		for k,v in pairs(名称数据) do
			if 内容.名称==v.名称 then
				发送数据(id,7,"#Y/这个名称已经被他人占用了，请重新再想个吧")
				 return
			end
		 end
		 if #名称>12 then
			发送数据(id,7,"#Y/这个名字太长了。")
			  return
		 end
		 if not 检测 then
			  if 玩家数据[数字id].角色.改名.时间 < os.time() then
				if 玩家数据[数字id].角色:扣除银子(2000000*(玩家数据[数字id].角色.改名.次数+1), 0, 0, "改名", 1) then
					玩家数据[数字id].角色.名称 = 名称
					table.insert(玩家数据[数字id].角色.改名.曾用名,名称)
					玩家数据[数字id].角色.改名.次数 = 玩家数据[数字id].角色.改名.次数 +1
					玩家数据[数字id].角色.改名.时间 =os.time()
					发送数据(id,237,{名称=名称})
					local bpbh=玩家数据[数字id].角色.BPBH
					for k,v in pairs(名称数据) do
						if 数字id==v.id then
							v.名称=名称
							 break
						end
					 end
					 写出文件([[sql/名称数据.txt]],table.tostring(名称数据))
					if 玩家数据[数字id].角色.BPMC ~= "无帮派" and 帮派数据[bpbh] then
						for k,v in pairs(帮派数据[bpbh].成员数据) do
							if v.id==数字id then
								v.名称=名称
								 break
							end
						end
					end
					添加最后对话(数字id,"修改名字成功！")
				else
					发送数据(id,7,"#Y/银两不足无法修改名称")
				end
			else
				发送数据(id,7,"#Y/你距离上次改名时间没有超过5分钟")
			end
		else
			发送数据(id,7,"#G/当前名字可用。")
		 end
		 return

	elseif 序号==72 then
		 if 内容.名称 == "熔炼技巧"  and 内容.等级 < 60  then
        发送数据(id,7,"#Y/技能等级不足60级")
		 elseif 内容.名称 == "熔炼技巧"  and 内容.等级 >= 60  then
		 	local 等级 =  math.floor(内容.等级/10)*10
			local 消耗 =  (16-(等级/10))  *5+10
			if 玩家数据[内容.数字id].角色.体力 >= 消耗 then
				玩家数据[内容.数字id].角色.体力 = 玩家数据[内容.数字id].角色.体力 -消耗
			else
		 		发送数据(id,7,"#Y/体力不足无法使用技能")
		 		return
		 	end
		 	体活刷新(内容.数字id)
		 	玩家数据[内容.数字id].道具:给予道具(内容.数字id,"钨金",1,等级)
		 end
	elseif 序号==73 then
		local 目标id=tonumber(内容.文本)
		local id1 = 内容.数字id
		  if 玩家数据[目标id]==nil then
			发送数据(id,7,"#Y/该玩家不在线无法查找！")
			玩家数据[id1].最后操作=nil
			玩家数据[id1].法宝id=nil
				return
		  end
		if 玩家数据[id1].最后操作=="影蛊" and 玩家数据[id1].法宝id ~=nil then
			local 道具id=玩家数据[id1].角色.法宝[玩家数据[id1].法宝id]
			if 玩家数据[id1].道具.数据[道具id].名称=="影蛊" then
				if 玩家数据[id1].道具.数据[道具id].时间~=nil and 玩家数据[id1].道具.数据[道具id].时间>os.time() then
					常规提示(id1,"#Y该法宝需要在#R"..时间转换(玩家数据[id1].道具.数据[道具id].时间).."#Y后才可使用")
					玩家数据[id1].最后操作=nil
					玩家数据[id1].法宝id=nil
					return
				elseif not 玩家数据[id1].角色:扣除银子(2000000,0,0,"影蛊") then
					常规提示(id1,"#Y需要200W银子才能使用")
					玩家数据[id1].最后操作=nil
					玩家数据[id1].法宝id=nil
					return
				end
				玩家数据[id1].道具.数据[道具id].魔法=玩家数据[id1].道具.数据[道具id].魔法-5
				消息提示(id1,"你的法宝影蛊灵气减少了5点")
				玩家数据[id1].道具.数据[道具id].时间=os.time()+3000-玩家数据[id1].道具.数据[道具id].气血*200 --使用间隔1小时,每提高一层缩短1分钟(即15层没有CD)
				消息提示(id1,"目标"..玩家数据[目标id].角色.名称.."("..目标id..")位于"..取地图名称(玩家数据[目标id].角色.地图数据.编号).."("..qz(玩家数据[目标id].角色.地图数据.x/20).."，"..qz(玩家数据[目标id].角色.地图数据.y/20)..")")
				道具刷新(id1)
			end
		end
		玩家数据[id1].最后操作=nil
		玩家数据[id1].法宝id=nil
	elseif 序号==80 then
		师门商店类:取系统商会数据(内容.数字id,内容.类型,内容.数据)
		--新增#11
	elseif 序号==81 then
		玩家数据[内容.数字id].道具:领取每日活跃奖励(内容.数字id,内容.类型)
	---------------------剑会天下
  elseif 序号==81.9 then
	    剑会商店类:数据处理(内容.数字id,内容.类型,内容.数据)
	elseif 序号==88 then
    local id=内容.数字id
    if 内容.文本 ~= 玩家数据[id].最后操作 then
      玩家数据[id].最后操作=nil
      常规提示(id,"#Y抄写经书不可三心二意，抄错了可就不好了！")
      return
    elseif 玩家数据[id].角色:取任务(80) == 0 or 副本数据.黑风山.进行[任务数据[玩家数据[id].角色:取任务(80)].副本id].进程 ~= 1 then
      常规提示(id,"#Y你没有这样的任务！")
      玩家数据[id].最后操作=nil
      return
    else
      玩家数据[id].最后操作=nil
      副本_黑风山:完成黑风山任务({id},玩家数据[id].角色:取任务(80),82)
    end
	elseif 序号==90 then
		玩家数据[内容.数字id].角色.系统设置[内容.选项] = 内容.回调

		if 内容.选项=="显示变身卡造型" and 内容.回调 then
			发送数据(玩家数据[内容.数字id].连接id,12)
			地图处理类:更改模型(内容.数字id,玩家数据[内容.数字id].角色.变身数据,1)
		end
	elseif 序号==90.1 then
		if 玩家数据[内容.数字id]~=nil then
			发送数据(玩家数据[内容.数字id].连接id,39)
			常规提示(内容.数字id,"你取消了变身！")
			玩家数据[内容.数字id].角色.变身数据=nil
			发送数据(玩家数据[内容.数字id].连接id,37,玩家数据[内容.数字id].角色.变身数据)
			地图处理类:更改模型(内容.数字id,玩家数据[内容.数字id].角色.变身数据,1)
		end
	 elseif 序号==91 then
		玩家数据[内容.数字id].角色:门派转换(内容)
	elseif 序号==92 then
		for n, v in pairs(玩家数据[内容.数字id].角色.快捷技能) do
			if 玩家数据[内容.数字id].角色.快捷技能[n].名称 == 内容.名称 then
				玩家数据[内容.数字id].角色.快捷技能[n] = nil
			end
		end
		发送数据(玩家数据[内容.数字id].连接id, 42, 玩家数据[内容.数字id].角色.快捷技能)
	 elseif 序号==94 then
		礼包奖励类:领取新手礼包(内容.数字id,内容.礼包)
	elseif 序号 == 95 then
		 抽奖处理:转盘抽奖处理(内容.数字id)
	 elseif 序号 == 96 then
		抽奖处理:钥匙宝箱抽奖(内容.数字id,内容)
	 elseif 序号 == 97 then
		  self:打字机回调(内容.数字id,内容)
	 elseif 序号 == 98 then
		  self:第二场景回调(内容.数字id,内容)
	 elseif 序号 == 99 then
		self:如梦奇谭开启(内容.数字id,内容)
	 elseif 序号 == 100 then
		self:购买戏票(内容.数字id,内容)
	 elseif 序号 == 105 then
		玩家数据[内容.数字id].角色:兑换潜能果()

	elseif 序号 == 100.5 then
	     local id = 内容.数字id
	     if 玩家数据[id].角色.等级 < 60 then
	      发送数据(玩家数据[id].连接id, 7, "#y/需要等级大于60")
	      return 0
	     end ---这里就吧解释了


	   if 玩家数据[id].道具:取飞行限制(id)==false then
	   	玩家数据[id].角色:扣除银子(100000,0,0,"跳转地图",1)
	   	常规提示(id,"您失去了100000银子。")--不解释
	     地图处理类:跳转地图(id,内容[1],内容[2],内容[3])

	    end

  ---------------
    elseif 序号 == 195 then
    	玩家数据[内容.数字id+0].自动回收:打开界面()
    elseif 序号 == 196 then
    	玩家数据[内容.数字id+0].自动回收:保存设置(内容.data)
	-------------
    elseif 序号==121.1 then
      local id=内容.数字id
      充值礼包类:获取礼包(id,内容)
    elseif  序号 == 121.2 then
      local id=内容.数字id
      充值礼包类:领取礼包(id,内容)
    elseif  序号 == 121.3 then
      local id=内容.数字id
      充值礼包类:购买VIP(id,内容)
    elseif  序号 == 121.4 then
      local id=内容.数字id
      充值礼包类:领取七日礼包(id,内容)
    elseif  序号 == 121.5 then
      local id=内容.数字id
      充值礼包类:领取等级礼包(id,内容)
  elseif 序号==121.6 then
    self:获取点卡数据(内容.数字id)
    elseif 序号 == 121.7 then
      self:内充处理(内容)
   elseif 序号 == 200 then
      修业系统:数据处理(内容.数字id,内容.序号1,内容.助战编号)---助战编号后面改为空

	 elseif 序号 == 201 then
		玩家数据[内容.数字id].角色:加点方案报存(内容.数字id)
	 elseif 序号 == 202 then
		玩家数据[内容.数字id].角色:加点方案替换(内容.方案)
	 elseif 序号 == 203 then
		玩家数据[内容.数字id].角色:启用当前方案(内容.方案)
   elseif 序号 == 204 then
    if 玩家数据[内容.数字id].角色.月卡 == nil then
      玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    end
    if 玩家数据[内容.数字id].角色.月卡.生效 and os.time()-玩家数据[内容.数字id].角色.月卡.到期时间 >= 0 then
	    玩家数据[内容.数字id].角色.月卡.生效=false
	    return
	  end
   	if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   		常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   		return
   		end
   	  if 移动数据[内容.数字id] == nil then
        移动数据[内容.数字id]={移动速度=0,加速开关1=0}
     end
     移动数据[内容.数字id].移动速度 = 40
     if 移动数据[内容.数字id].加速开关1 == 0 then
        移动数据[内容.数字id].加速开关1 = 1
     end
      发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你开启了移动加速")
    发送数据(玩家数据[内容.数字id].连接id, 309,{加速开关1=移动数据[内容.数字id].加速开关1,移动数据=移动数据[内容.数字id].移动速度})
   elseif 序号 == 204.1 then
   	    if 玩家数据[内容.数字id].角色.月卡 == nil then
      玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    end
   	if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   		常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   		return
   		end
   	  if 移动数据[内容.数字id] == nil then
        移动数据[内容.数字id]={移动速度=0,加速开关1=0}
     end
     if 移动数据[内容.数字id].加速开关1 == 1 then
        移动数据[内容.数字id].加速开关1 = 0
     end
      发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你关闭了移动加速")
    发送数据(玩家数据[内容.数字id].连接id, 309.1,{加速开关1=移动数据[内容.数字id].加速开关1,移动数据=移动数据[内容.数字id].移动速度})
    elseif 序号 == 205 then
    	    if 玩家数据[内容.数字id].角色.月卡 == nil then
      			玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    			end
   	if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   		常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   		return
   		end


    	if 攻击数据[内容.数字id] == nil then
        攻击数据[内容.数字id]={攻击速度=10,加速开关2=0}
     end
     if 攻击数据[内容.数字id].加速开关2 == 0 then
        攻击数据[内容.数字id].加速开关2 = 1
     end
     发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你开启了攻击加速")
     发送数据(玩家数据[内容.数字id].连接id, 310,{攻击速度=攻击数据[内容.数字id].攻击速度})
    elseif 序号 == 205.1 then
    -- 	    if 玩家数据[内容.数字id].角色.月卡 == nil then
    --   玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    -- end
   	-- if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   	-- 	常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   	-- 	return
   	-- 	end
    	if 攻击数据[内容.数字id] == nil then
        攻击数据[内容.数字id]={攻击速度=10,加速开关2=0}
     end
     if 攻击数据[内容.数字id].加速开关2 == 1 then
        攻击数据[内容.数字id].加速开关2 = 0
     end
     发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你关闭了攻击加速")
     发送数据(玩家数据[内容.数字id].连接id, 310.1,{加速开关2=攻击数据[内容.数字id].加速开关2,攻击速度=攻击数据[内容.数字id].攻击速度})
    elseif 序号 == 206 then
    	    if 玩家数据[内容.数字id].角色.月卡 == nil then
      玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    end
   	if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   		常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   		return
   		end
    	    if 施法数据[内容.数字id] == nil then
        		施法数据[内容.数字id]={施法速度=10,加速开关3=0}
     			end
    if 施法数据[内容.数字id].加速开关3 == 0 then
        施法数据[内容.数字id].加速开关3 = 1
     end
      发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你开启了施法加速")
    发送数据(玩家数据[内容.数字id].连接id, 312,{施法速度=施法数据[内容.数字id].施法速度})

      elseif 序号 == 206.1 then
      	    if 玩家数据[内容.数字id].角色.月卡 == nil then
      玩家数据[内容.数字id].角色.月卡 = {生效=false,到期时间=0}
    end
   	if 玩家数据[内容.数字id].角色.月卡.生效 == false then
   		常规提示(内容.数字id,"#y/少侠没有开通月卡，无法使用此功能。")
   		return
   		end
      if 施法数据[内容.数字id] == nil then
        施法数据[内容.数字id]={施法速度=10,加速开关3=0}
     end
    if 施法数据[内容.数字id].加速开关3 == 1 then
        施法数据[内容.数字id].加速开关3 = 0
     end
    发送数据(玩家数据[内容.数字id].连接id, 7, "#y/你关闭了施法加速")
    发送数据(玩家数据[内容.数字id].连接id, 312.1,{加速开关3=施法数据[内容.数字id].加速开关3,施法速度=施法数据[内容.数字id].施法速度})
 elseif 序号==207 then
    local id = 内容.数字id
    if 玩家数据[id].角色.月卡 == nil then
      玩家数据[id].角色.月卡 = {生效=false,到期时间=0}
    end
    发送数据(玩家数据[id].连接id,313,玩家数据[id].角色.月卡)
 elseif 序号==208 then
    玩家数据[内容.数字id].道具:月卡奖励(内容.数字id)
	elseif 序号==212 then
	   多开系统类:切换角色(内容.数字id,内容)


elseif 序号==229 then
      local id = 内容.数字id
          玩家数据[id].道具:精炼数据获取(id)

elseif 序号 == 252 then

 elseif 序号 == 253 then

 elseif 序号 == 254 then
 	  -----------------------------抽奖
 	  elseif 序号 >= 255 and 序号 <= 264 then
 	  	local 数字id=内容.数字id+0
 	  	local 连接id=玩家数据[数字id].连接id
 	  	奖池抽奖类:数据处理(连接id,数字id,序号,内容)
 	  -----------------------------
    elseif 序号 == 265 then    --战备
	    local id =内容.数字id
      local 临时格子 =tonumber(内容.文本)
	    玩家数据[id].角色.锁定附魔 = 玩家数据[id].角色.锁定附魔 or {}
	    玩家数据[id].角色.锁定附魔[临时格子]=false
	  ---------------------------剑会天下
	  elseif  序号 == 400 then
	  	local id=内容.数字id
	  	剑会天下:数据处理(id,内容)
	  ---------------------------
	  elseif  序号 == 401 then
	  	local id=内容.数字id
	  	聊天处理类:频道发言处理(玩家数据[id].连接id,id,{频道=1,发送方式=1,文本="QWER23OI4J2OJK34223",时间=os.time(),数字id=id })--退出战斗
	  elseif 序号 == 451 then
		  local id=内容.数字id
		  if 玩家数据[id].角色.玄灵珠==nil then
		  	玩家数据[id].角色.玄灵珠={类型="回春",破军=0,回春=0}
		  end
		  if 玩家数据[id].角色.玄灵珠.类型=="回春" then
		  	玩家数据[id].角色.玄灵珠.类型="破军"
		  elseif 玩家数据[id].角色.玄灵珠.类型=="破军" then
		  	玩家数据[id].角色.玄灵珠.类型="空灵"
		  elseif 玩家数据[id].角色.玄灵珠.类型=="空灵" then
		  	玩家数据[id].角色.玄灵珠.类型="噬魂"
		  elseif 玩家数据[id].角色.玄灵珠.类型=="噬魂" then
		  	玩家数据[id].角色.玄灵珠.类型="回春"
		  end
		    发送数据(玩家数据[id].连接id,207,玩家数据[id].角色.玄灵珠)
		    常规提示(id,"更改成功，当前使用#R/" ..玩家数据[id].角色.玄灵珠.类型)
		elseif 序号 >= 550 and 序号 <= 600 then
  	    辅助内挂类:数据处理(序号, 内容)


  	elseif 序号 == 673 then
		神兵异兽榜:获取排行数据(内容.数字id,内容.序号1,内容.类型)
		elseif 序号 == 674 then
			self:一键强化符(内容.数字id+0)
		elseif 序号 == 675 then
			魔你:数据处理("门派秘籍",内容)
		elseif 序号 == 675.2 then
			魔你:重置窗口(内容)
		elseif 序号 == 676 then

			self:开通战前施法(内容)
		elseif 序号 == 677 then
			发送数据(玩家数据[内容.数字id].连接id,6566,QJHDSJ)

end
end

function 系统处理类:开通战前施法(内容)
		local 数字id=内容.数字id+0
		local 事件=内容.shijian
		local 玩家仙玉=f函数.读配置(程序目录..[[data\]]..玩家数据[数字id].账号..[[\账号信息.txt]], "账号配置", "仙玉") + 0
    local 开通仙玉数 = 888888
    local 转换仙玉数 = 20000

    -- local 战前技能 ={"龙卷雨击","横扫千军","鹰击","叽叽歪歪","飞砂走石","三昧真火","落叶萧萧","雨落寒沙","后发制人","龙腾","当头一棒","五雷咒","落雷符","烟雨剑法","雷霆万钧","飘渺式"}

	local 战前技能={"飞砂走石","横扫千军","金刚护法","其疾如风","五雷咒",
            "侵蚀·龙卷雨击·噬魂","狮搏","疯狂鹰击","亢龙归海","龙战于野","潜龙在渊","后发制人","侵蚀·横扫千军·噬魂","其徐如林","侵掠如火",
            "岿然如山","佛法无边","葬玉焚花","侵蚀·唧唧歪歪·噬魂","功德无量","秘传飞砂走石","风云变色","魔焰滔天",
            "秘传三昧真火","魔火焚世","三昧真火","摇头摆尾","烈火真言","风火燎原","蛊木迷瘴","落叶萧萧","风卷残云","血雨","星月之惠",
            "花语歌谣","蜜润","侵蚀·失魂符·噬魂","钟馗论道","分身术","一笑倾城","花谢花飞",
            "雨落寒沙","金击式","侵蚀·葬玉焚花·噬魂","侵蚀·五雷轰顶·噬魂","三荒尽灭","侵蚀·雷霆万钧·噬魂","雷霆汹涌","风雷韵动","鸣雷诀",
            "天雷灌注","普渡众生","波澜不惊","灵动九天","天罗地网","侵蚀·千蛛噬魂·噬魂","百鬼噬魂","碎甲符","尸腐毒","无间地狱","侵蚀·幽夜无明·噬魂","天命剑法","侵蚀·烟雨剑法·噬魂",
            "飘渺式","同伤式","侵蚀·绝烬残光·噬魂","明光宝烛","地涌金莲","化羽为血","浪涌","侵蚀·天崩地裂·噬魂","惊涛怒","龙腾","侵蚀·当头一棒·噬魂",
            "神针撼海","侵蚀·棒掀北斗·噬魂","兴风作浪","棍打诸神","天地洞明","天雷斩","灵能激发","刀光剑影","力劈华山","法术防御","流沙轻音","扶摇万里","善恶有报",
            "超级壁垒击破","超级地狱烈火","超级泰山压顶","超级水漫金山","超级奔雷咒"}

    if 玩家数据[数字id].角色.战前施法 == nil then
      	玩家数据[数字id].角色.战前施法 = {生效=false,技能="",开通=false}
    end
    if 事件=="开通战前施法"  then
    		if 玩家数据[数字id].角色.战前施法.生效==false and 玩家数据[数字id].角色.战前施法.开通==false then
	    		if 玩家仙玉 >= 开通仙玉数 then
	    			玩家数据[数字id].角色:扣除仙玉(开通仙玉数,0,0, "开通战前施法费")
	    			玩家数据[数字id].角色.战前施法.生效=true
	    			玩家数据[数字id].角色.战前施法.开通=true
	    			玩家数据[数字id].角色.战前施法.技能=战前技能[math.random(1,#战前技能)]
	    			添加最后对话(数字id,"#G感谢您开通使用战前施法功能！\n#G您当前的战前施法技能为：#R"..玩家数据[数字id].角色.战前施法.技能)
	    		else
	    			发送数据(玩家数据[数字id].连接id, 7, "#y/您的仙玉不足"..开通仙玉数.."点，无法开通")
	    		end
	    	else
	    		发送数据(玩家数据[数字id].连接id, 7, "#y/你已经开通过该功能了呀#24")
	    	end
    elseif 事件=="了解战前施法"  then
    				添加最后对话(数字id,"#G战前施法：战斗开始前自动施放一次主动法术,技能等级系人物等级+10；\n#G开通本功能会获得随机的一个战前法术技能；如对技能不满意可再次转换技能；\n#G战前技能可选范围为界面上展示的技能；\n#G有需要前置条件的技能如:变身.战意,则与原门派施法要求一致； \n#G部分技能可与《十八奇技》相互作用,可发挥超乎想象的力量! \n#G准备接受这非同一般的体验了吗?")
    elseif 事件=="转换战前技能"  then
    		if 玩家数据[数字id].角色.战前施法.开通 then
			    			if 玩家仙玉 >= 转换仙玉数 then
				    			玩家数据[数字id].角色:扣除仙玉(转换仙玉数,0,0, "转换战前施法费")
			    				玩家数据[数字id].角色.战前施法.技能=战前技能[math.random(1,#战前技能)]
			    				玩家数据[数字id].角色.战前施法.生效=true
			    			--	添加最后对话(数字id,"#W恭喜您成功转换战前施法技能！\n#G您当前的战前施法技能更替为：#R"..玩家数据[数字id].角色.战前施法.技能)
			    			else
			    				发送数据(玩家数据[数字id].连接id, 7, "#y/您的仙玉不足"..转换仙玉数.."点，无法转换战前施法技能哦")
			    			end
    		else
    			发送数据(玩家数据[数字id].连接id, 7, "#W您还未曾开通该功能呢#24")
    		end
    elseif 事件=="暂时停用功能" then
    			if  玩家数据[数字id].角色.战前施法.开通 then
    				玩家数据[数字id].角色.战前施法.生效=false
    				发送数据(玩家数据[数字id].连接id, 7, "#W您的战前施法功能处于#R关闭#W状态了")
    			else
    				发送数据(玩家数据[数字id].连接id, 7, "#W您还未曾开通该功能呢#24")
    			end
    elseif 事件=="恢复使用功能" then
    			if  玩家数据[数字id].角色.战前施法.开通 then
    				玩家数据[数字id].角色.战前施法.生效=true
    				发送数据(玩家数据[数字id].连接id, 7, "#W您的战前施法功能处于#G开启#W状态了")
    			else
    				发送数据(玩家数据[数字id].连接id, 7, "#W您还未曾开通该功能呢#24")
    			end
    elseif 事件=="查询当前技能" then
    			if  玩家数据[数字id].角色.战前施法.开通 then
    				添加最后对话(数字id,"#G您当前的战前施法技能为：#R"..玩家数据[数字id].角色.战前施法.技能)
    			else
    				添加最后对话(数字id,"#G你是来捣乱的吗，你都没有开通这个功能阿喂~")
    			end
    end
    if 事件=="转换战前技能" then
    发送数据(玩家数据[数字id].连接id,677.3,玩家数据[数字id].角色.战前施法.技能)
  else
  	发送数据(玩家数据[数字id].连接id,677.1,玩家数据[数字id].角色.战前施法.技能)
    end

end


function 系统处理类:一键强化符(数字id)
		local id=数字id
    local 银子消耗 = 800000
    local 作用装备数 = 0
    if 玩家数据[id].角色.武神坛角色 then
    	银子消耗=0
    end

     if 玩家数据[id]~= nil then
        for n=1,6 do
            if 玩家数据[id].角色.装备[n] ~= nil  then

            	作用装备数=作用装备数+1
            	if 取银子(id) < 银子消耗*作用装备数 then
        					常规提示(id,"银两不足！".."此次强化"..作用装备数.."件装备，".."需要"..银子消耗*作用装备数.."两")
        					return
    					end
     					玩家数据[id].角色:扣除银子(银子消耗*作用装备数,0,0,"一键临时符",1)

                if   玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]]  then
                    local 道具=玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]]
                    if 道具.临时附魔 == nil then
                    道具.临时附魔 = {}
                    end
                    local sddj=186
                    local 体质z=math.floor( sddj * 0.2 )
                    local 魔法z=math.floor( sddj * 2 )
                    local 速度z=math.floor( sddj * 0.7 )
                    local 防御z=math.floor( sddj * 1 )
                    local 魔力z=math.floor( sddj * 0.3 )
                    local 法术防御z=math.floor( sddj * 0.4 )
                    local 伤害z=math.floor( sddj * 1 )
                    local 命中z=math.floor( sddj * 1 )
                    local 气血z=math.floor( sddj * 2 )
                    local 法术伤害z=math.floor( sddj * 0.4 )
                    local 愤怒z=math.floor( sddj * 0.3 )
                    local 耐力z=math.floor( sddj * 0.2 )
                    local 力量z=math.floor( sddj * 0.2 )
                    local 法伤结果z=math.floor( sddj * 0.3 )
                    local 气血回复效果z=math.floor( sddj * 0.4 )
                    local 物伤结果z=math.floor( sddj * 0.3 )
                    local 持效时间=86400*3

                        if n == 1 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.耐力==nil then
                                道具.临时附魔["耐力"] = {}
                                道具.临时附魔["耐力"].数值 = 耐力z
                                道具.临时附魔["耐力"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.耐力=玩家数据[id].角色.装备属性.耐力 + 耐力z
                            else
                                道具.临时附魔["耐力"] = {}
                                道具.临时附魔["耐力"].数值 = 耐力z
                                道具.临时附魔["耐力"].时间 = os.time()+持效时间
                            end
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.命中==nil then
                                道具.临时附魔["命中"] = {}
                                道具.临时附魔["命中"].数值 = 命中z
                                道具.临时附魔["命中"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.命中=玩家数据[id].角色.装备属性.命中 + 命中z
                            else
                                道具.临时附魔["命中"] = {}
                                道具.临时附魔["命中"].数值 = 命中z
                                道具.临时附魔["命中"].时间 = os.time()+持效时间
                            end

                        elseif n ==2 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.体质==nil then
                                道具.临时附魔["体质"] = {}
                                道具.临时附魔["体质"].数值 = 体质z
                                道具.临时附魔["体质"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.体质=玩家数据[id].角色.装备属性.体质 + 体质z
                            else
                                道具.临时附魔["体质"] = {}
                                道具.临时附魔["体质"].数值 = 体质z
                                道具.临时附魔["体质"].时间 = os.time()+持效时间
                            end
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.法术伤害==nil then
                                道具.临时附魔["法术伤害"] = {}
                                道具.临时附魔["法术伤害"].数值 = 法术伤害z
                                道具.临时附魔["法术伤害"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.法术伤害=玩家数据[id].角色.装备属性.法术伤害 + 法术伤害z
                            else
                                道具.临时附魔["法术伤害"] = {}
                                道具.临时附魔["法术伤害"].数值 = 法术伤害z
                                道具.临时附魔["法术伤害"].时间 = os.time()+持效时间
                            end
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.力量==nil then
                                道具.临时附魔["力量"] = {}
                                道具.临时附魔["力量"].数值 = 力量z
                                道具.临时附魔["力量"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.力量=玩家数据[id].角色.装备属性.力量 + 力量z
                            else
                                道具.临时附魔["力量"] = {}
                                道具.临时附魔["力量"].数值 = 力量z
                                道具.临时附魔["力量"].时间 = os.time()+持效时间
                            end

                        elseif n ==4 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.法术防御==nil then
                                道具.临时附魔["法术防御"] = {}
                                道具.临时附魔["法术防御"].数值 = 法术防御z
                                道具.临时附魔["法术防御"].时间 = os.time()+持效时间
                                玩家数据[id].角色.法术防御=玩家数据[id].角色.法术防御 + 法术防御z
                            else
                                道具.临时附魔["法术防御"] = {}
                                道具.临时附魔["法术防御"].数值 = 法术防御z
                                道具.临时附魔["法术防御"].时间 = os.time()+持效时间
                            end
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.魔力==nil then
                                道具.临时附魔["魔力"] = {}
                                道具.临时附魔["魔力"].数值 = 魔力z
                                道具.临时附魔["魔力"].时间 = os.time()+持效时间
                                玩家数据[id].角色.魔力=玩家数据[id].角色.魔力 + 魔力z
                            else
                                道具.临时附魔["魔力"] = {}
                                道具.临时附魔["魔力"].数值 = 魔力z
                                道具.临时附魔["魔力"].时间 = os.time()+持效时间
                            end
                        elseif n ==5 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.愤怒==nil then
                                道具.临时附魔["愤怒"] = {}
                                道具.临时附魔["愤怒"].数值 = 愤怒z
                                道具.临时附魔["愤怒"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.愤怒=玩家数据[id].角色.装备属性.愤怒 + 愤怒z
                            else
                                道具.临时附魔["愤怒"] = {}
                                道具.临时附魔["愤怒"].数值 = 愤怒z
                                道具.临时附魔["愤怒"].时间 = os.time()+持效时间
                            end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.物伤结果==nil then
                                道具.临时附魔["物伤结果"] = {}
                                道具.临时附魔["物伤结果"].数值 = 物伤结果z
                                道具.临时附魔["物伤结果"].时间 = os.time()+持效时间
                                玩家数据[id].角色.物伤结果=玩家数据[id].角色.物伤结果 + 物伤结果z
                                else
                                道具.临时附魔["物伤结果"] = {}
                                道具.临时附魔["物伤结果"].数值 = 物伤结果z
                                道具.临时附魔["物伤结果"].时间 = os.time()+持效时间
                                end
                        elseif n ==6 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.速度==nil then
                                道具.临时附魔["速度"] = {}
                                道具.临时附魔["速度"].数值 = 速度z
                                道具.临时附魔["速度"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.速度=玩家数据[id].角色.装备属性.速度 + 速度z
                            else
                                道具.临时附魔["速度"] = {}
                                道具.临时附魔["速度"].数值 = 速度z
                                道具.临时附魔["速度"].时间 = os.time()+持效时间
                            end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.法伤结果==nil then
                                道具.临时附魔["法伤结果"] = {}
                                道具.临时附魔["法伤结果"].数值 = 法伤结果z
                                道具.临时附魔["法伤结果"].时间 = os.time()+持效时间
                                玩家数据[id].角色.法伤结果=玩家数据[id].角色.法伤结果 + 法伤结果z
                                else
                                道具.临时附魔["法伤结果"] = {}
                                道具.临时附魔["法伤结果"].数值 = 法伤结果z
                                道具.临时附魔["法伤结果"].时间 = os.time()+持效时间
                                end
                        elseif n == 3 then
                            if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.魔法==nil then
                                道具.临时附魔["魔法"] = {}
                                道具.临时附魔["魔法"].数值 = 魔法z
                                道具.临时附魔["魔法"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.魔法=玩家数据[id].角色.装备属性.魔法 + 魔法z
                            else
                                道具.临时附魔["魔法"] = {}
                                道具.临时附魔["魔法"].数值 = 魔法z
                                道具.临时附魔["魔法"].时间 = os.time()+持效时间
                            end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.防御==nil then
                                道具.临时附魔["防御"] = {}
                                道具.临时附魔["防御"].数值 = 防御z
                                道具.临时附魔["防御"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.防御=玩家数据[id].角色.装备属性.防御 + 防御z
                                else
                                道具.临时附魔["防御"] = {}
                                道具.临时附魔["防御"].数值 = 防御z
                                道具.临时附魔["防御"].时间 = os.time()+持效时间
                                end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.气血==nil then
                                道具.临时附魔["气血"] = {}
                                道具.临时附魔["气血"].数值 = 气血z
                                道具.临时附魔["气血"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.气血=玩家数据[id].角色.装备属性.气血 + 气血z
                                else
                                道具.临时附魔["气血"] = {}
                                道具.临时附魔["气血"].数值 = 气血z
                                道具.临时附魔["气血"].时间 = os.time()+持效时间
                                end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.伤害==nil then
                                道具.临时附魔["伤害"] = {}
                                道具.临时附魔["伤害"].数值 = 伤害z
                                道具.临时附魔["伤害"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.伤害=玩家数据[id].角色.装备属性.伤害 + 伤害z
                                else
                                道具.临时附魔["伤害"] = {}
                                道具.临时附魔["伤害"].数值 = 伤害z
                                道具.临时附魔["伤害"].时间 = os.time()+持效时间
                                end
                                if 玩家数据[id].道具.数据[玩家数据[id].角色.装备[n]].临时附魔.气血回复效果==nil then
                                道具.临时附魔["气血回复效果"] = {}
                                道具.临时附魔["气血回复效果"].数值 = 气血回复效果z
                                道具.临时附魔["气血回复效果"].时间 = os.time()+持效时间
                                玩家数据[id].角色.装备属性.气血回复效果=玩家数据[id].角色.装备属性.气血回复效果 + 气血回复效果z
                                else
                                道具.临时附魔["气血回复效果"] = {}
                                道具.临时附魔["气血回复效果"].数值 = 气血回复效果z
                                道具.临时附魔["气血回复效果"].时间 = os.time()+持效时间
                                end
                        end
                end
             玩家数据[id].角色:刷新信息("33")
            end
        end
    end
        常规提示(id,"为#R"..作用装备数.."#Y件装备附加临时符，消耗了#R"..银子消耗*作用装备数.."#Y两银子")
        发送数据(玩家数据[id].连接id,6587.2,{装备=玩家数据[id].角色:取装备数据(),灵饰=玩家数据[id].角色:取灵饰数据(),角色=玩家数据[id].角色:取观察数据()})
end
------------------------------------------



function 系统处理类:藏宝阁上架召唤兽(id,编号,价格)
  if 玩家数据[id].召唤兽.数据[编号] == nil then
    发送数据(玩家数据[id].连接id, 7, "#y/你没有这样的召唤兽")
    return 0
  elseif 玩家数据[id].角色.武神坛角色 then
    发送数据(玩家数据[id].连接id, 7, "#y/武神坛角色滚")
    return 0
  elseif 玩家数据[id].召唤兽:是否有装备(编号)  then
    发送数据(玩家数据[id].连接id, 7, "#y/请将该召唤兽装备卸下后再进行交易")
    return 0
  elseif tonumber(价格) == nil or tonumber(价格) < 1 then
    发送数据(玩家数据[id].连接id, 7, "#y/请正确输入物品的价格")
    return 0
  elseif  玩家数据[id].摊位数据~=nil then
    发送数据(玩家数据[id].连接id, 7, "#y/摆摊不能上架藏宝阁")
    return 0
    elseif  tonumber(价格) < 20 then
    发送数据(玩家数据[id].连接id, 7, "#y/银子价格不能低于20点")
    return 0
  elseif 玩家数据[id].召唤兽.数据[编号].统御 ~= nil then
		发送数据(玩家数据[id].连接id, 7, "#y/请将所有召唤兽统御效果撤除后再进行交易")
		return 0
  elseif #玩家数据[id].召唤兽.数据>7 then
    发送数据(玩家数据[id].连接id, 7, "#Y/召唤携带数量超过7个无法上架,请将多余的存仓库")
    return 0
  else
    藏宝阁数据["召唤兽"][#藏宝阁数据["召唤兽"]+1] = {召唤兽=玩家数据[id].召唤兽.数据[编号],价格=价格,所有者=id,结束时间=os.time()+172800}
    if 玩家数据[id].召唤兽.数据[编号].认证码==玩家数据[id].角色.参战宝宝.认证码 then
      玩家数据[id].角色.参战宝宝={}
      发送数据(玩家数据[id].连接id,18,玩家数据[id].角色.参战宝宝)
    end
    发送数据(玩家数据[id].连接id,45,编号)
    table.remove(玩家数据[id].召唤兽.数据,编号)
    发送数据(玩家数据[id].连接id, 7, "#y/上架成功")
    for i,v in pairs(观察藏宝阁数据) do
      if 玩家数据[i] ~= nil then
        发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
      else
        观察藏宝阁数据[i] = nil
      end
    end
  end
end

function 系统处理类:账号验证id(账号,id)
	local fh=0
	local zhxx=table.loadstring(读入文件(程序目录..[[data/]]..账号..[[/信息.txt]]))
	if id ~= nil and type(id)=="number" then
		for k,v in ipairs(zhxx) do
			if v==id then
				fh= id * os.date("%H", os.time()) / os.date("%M", os.time()) + os.time() - id
				break
			end
		end
	end
	return fh
end

function 系统处理类:藏宝阁上架(id,编号,价格) --上架手续费 第二要限制出售类型 装备类 120级以上 其他
  local 物品id = 玩家数据[id].角色.道具[编号]
  local 道具类型 = 玩家数据[id].道具.数据[物品id].分类
  local 类型 = "其他"

  if 玩家数据[id].角色.道具[编号] == nil then
    发送数据(玩家数据[id].连接id, 7, "#y/你没有这样的道具")
    return 0
  elseif 玩家数据[id].角色.武神坛角色 then
    发送数据(玩家数据[id].连接id, 7, "#y/武神坛角色滚")
    return 0
  elseif  玩家数据[id].摊位数据~=nil then
    发送数据(玩家数据[id].连接id, 7, "#y/摆摊不能上架藏宝阁")
    return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]] == nil then
    发送数据(玩家数据[id].连接id, 7, "#y/出售的物品不存在")
    return 0
  elseif tonumber(价格) == nil or tonumber(价格) < 1 then
    发送数据(玩家数据[id].连接id, 7, "#y/请正确输入物品的价格")
    return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "飞行符"
    or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "摄妖香"
     or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "珍珠"
      or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "天眼通符"
        or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "金柳露"
         or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "超级金柳露"
          or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "玄武石"
           or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "青龙石"
            or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "白虎石"
             or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "朱雀石"
              or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "海马"
               or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "秘制红罗羹"
                or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "秘制绿罗羹"
                 or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "洞冥草"
                  or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "月华露"
                   or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "修炼果"
                    or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "九转金丹"
                     or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "易经丹"
                      or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "玉葫灵髓"
                       or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "清灵净瓶"
                        or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "彩果"
                         or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "金银锦盒"
                          or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "空白强化符"
                           or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "碎星锤"
                            or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "神兵图鉴"
                             or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "灵饰图鉴"
                              or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "灵宝图鉴"
                               or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "含沙射影"
                                or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "符石卷轴"
                                 or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "召唤兽内丹"
                                  or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "元宵"
                                   or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "低级清灵净瓶"
                                    or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "中级清灵净瓶"
                                     or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "百炼精铁"
                                      or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "魔兽要诀"
                                       or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "自动抓鬼卡"
                                        or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "九转金丹"
                                         or 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].名称 == "附魔宝珠" then
        发送数据(玩家数据[id].连接id, 7, "#y/请勿上架低价值的物品")
        return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].总类 == 1 and 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].子类 == 20 then
      发送数据(玩家数据[id].连接id, 7, "#y/请勿上架低价值的物品")
       return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].总类 == 1 and 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].子类 == 1 then
      发送数据(玩家数据[id].连接id, 7, "#y/请勿上架低价值的物品")
       return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].总类 == 55 and 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].子类 == 1 then
      发送数据(玩家数据[id].连接id, 7, "#y/请勿上架低价值的物品")
       return 0
  elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].加锁 then
     发送数据(玩家数据[id].连接id, 7, "#y/该物品无法上架")
      return 0
  elseif 玩家数据[id].道具.数据[物品id].总类 == 2 and 道具类型 >=1 and 道具类型 <= 6 and 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].级别限制 < 140 then
      发送数据(玩家数据[id].连接id, 7, "#y/低于140的装备无法上架藏宝阁")
      return 0
  elseif 玩家数据[id].道具.数据[物品id].总类 == 2 and 道具类型 >=10 and 道具类型 <=13 and 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].级别限制 < 60 then
      发送数据(玩家数据[id].连接id, 7, "#y/低于60的灵饰无法上架藏宝阁")
      return 0
    elseif 玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].专用~=nil then
       玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].专用=id
       玩家数据[id].道具.数据[玩家数据[id].角色.道具[编号]].不可交易=true
      发送数据(玩家数据[id].连接id, 7, "#y/专用装备无法上架藏宝阁？")
      return 0
  else
    if 道具类型 ~= nil then
      if 玩家数据[id].道具.数据[物品id].总类 == 2 and 道具类型 >=1 and 道具类型 <= 6 then
        类型 = "装备"
      elseif 玩家数据[id].道具.数据[物品id].总类 == 2 and 道具类型 >=10 and 道具类型 <=13 then
        类型 = "灵饰"
      end
    end
    藏宝阁数据[类型][#藏宝阁数据[类型]+1] = {物品=玩家数据[id].道具.数据[物品id],价格=价格,所有者=id,结束时间=os.time()+172800}
    玩家数据[id].角色.道具[编号] = nil
    玩家数据[id].道具.数据[物品id] = nil
    道具刷新(id)
    发送数据(玩家数据[id].连接id, 7, "#y/上架成功")
    for i,v in pairs(观察藏宝阁数据) do
      if 玩家数据[i] ~= nil then
        发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
      else
        观察藏宝阁数据[i] = nil
      end
    end
  end
end



function 系统处理类:内充处理(内容)
内充系统类_CDK兑换(内容.数字id,内容.卡号)
end




function 系统处理类:藏宝阁上架银两(id,数量,价格)
  if tonumber(数量) == nil or tonumber(价格) ==nil then
    return
  end
  if 取银子(id)<数量 then
    发送数据(玩家数据[id].连接id,7,"#y/你没那么多银子")
  elseif 玩家数据[id].角色.武神坛角色 then
    发送数据(玩家数据[id].连接id, 7, "#y/武神坛角色滚")
    return 0
  elseif tonumber(价格) == nil or tonumber(价格) < 1 then
    发送数据(玩家数据[id].连接id, 7, "#y/请正确输入价格")
    return 0
  elseif  玩家数据[id].摊位数据~=nil then
    发送数据(玩家数据[id].连接id, 7, "#y/摆摊不能上架藏宝阁")
    return 0
  else
      玩家数据[id].角色:扣除银子(数量,0,0,"上架藏宝阁")
      藏宝阁数据["银两"][#藏宝阁数据["银两"]+1] = {数额=数量,价格=价格,所有者=id,结束时间=os.time()+172800}
      发送数据(玩家数据[id].连接id, 7, "#y/上架成功")
    for i,v in pairs(观察藏宝阁数据) do
      if 玩家数据[i] ~= nil then
        发送数据(玩家数据[i].连接id,116.1, 藏宝阁数据)
      else
        观察藏宝阁数据[i] = nil
    end
    end
    end
end

function 系统处理类:藏宝阁购买处理(id,编号,类型)
  local 关键字 = "其他"
  if 类型 == 1 then
    关键字 = "装备"
  elseif 类型 == 3 then
    关键字 = "灵饰"
  elseif 类型 == 4 then
    关键字 = "召唤兽"
  elseif 类型 == 5 then
    关键字 = "银两"
  elseif 类型 == 6 then
    关键字 = "其他"
  elseif 类型 == 7 then
    关键字 = "角色"
  end
  if 藏宝阁数据[关键字][编号] == nil then
    发送数据(玩家数据[id].连接id, 7, "#y/数据已经刷新请重新打开藏宝阁")
    return 0
  elseif 玩家数据[id].角色.武神坛角色 then
    发送数据(玩家数据[id].连接id, 7, "#y/武神坛角色滚")
    return 0
  elseif 藏宝阁数据[关键字][编号].结束时间 - os.time() <= 30 then
    发送数据(玩家数据[id].连接id, 7, "#y/该物品即将超时下架,无法进行购买处理")
    return 0
  else
    local 价格 = tonumber(藏宝阁数据[关键字][编号].价格)
    if 价格 == nil  then
        return
    end
    local 买家价格 = math.floor(价格)
   	local 之前仙玉 =f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","仙玉")+0
	   if 之前仙玉<买家价格 then
      常规提示(id,"仙玉不够，无法购买!!!")
      return
    end
    local 对方id = 藏宝阁数据[关键字][编号].所有者
    if 关键字 ~= "银两" and 关键字 ~= "召唤兽" and 关键字 ~= "角色" then
      self.临时格子=玩家数据[id].角色:取道具格子()
      if self.临时格子==0 then
        发送数据(玩家数据[id].连接id,7,"#y/您当前的包裹空间已满，无法购买")
        return 0
      end
      self.可用id = 玩家数据[id].道具:取新编号()
      玩家数据[id].道具.数据[self.可用id] = 藏宝阁数据[关键字][编号].物品
      玩家数据[id].角色.道具[self.临时格子] = self.可用id
      藏宝阁记录 = 藏宝阁记录..玩家数据[id].角色.名称.."通过藏宝阁购买ID:"..藏宝阁数据[关键字][编号].所有者.."物品["..藏宝阁数据[关键字][编号].物品.名称.."]花费"..价格.."银两\n"
      table.remove(藏宝阁数据[关键字],编号)
      发送数据(玩家数据[id].连接id,7,"#y/恭喜你购买物品成功")
    elseif 关键字 == "银两" then
      玩家数据[id].角色:添加银子(藏宝阁数据[关键字][编号].数额,"藏宝阁购买"..关键字,1)
      藏宝阁记录 = 藏宝阁记录..玩家数据[id].角色.名称.."通过藏宝阁购买ID:"..藏宝阁数据[关键字][编号].所有者.."物品["..藏宝阁数据[关键字][编号].数额.."两银子]花费"..价格.."银两\n"
      table.remove(藏宝阁数据[关键字],编号)
      发送数据(玩家数据[id].连接id,7,"#y/恭喜你购买物品成功")
    elseif 关键字 == "召唤兽" then
      if #玩家数据[id].召唤兽.数据 >= 7 then
        发送数据(玩家数据[id].连接id,7,"#y/您的召唤兽空间已满，无法购买")
        return 0
      else
        玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据+1] = 藏宝阁数据[关键字][编号].召唤兽
        藏宝阁记录 = 藏宝阁记录..玩家数据[id].角色.名称.."通过藏宝阁购买ID:"..藏宝阁数据[关键字][编号].所有者.."物品["..藏宝阁数据[关键字][编号].召唤兽.名称.."]花费"..价格.."银两\n"
        table.remove(藏宝阁数据[关键字],编号)
        发送数据(玩家数据[id].连接id,7,"#y/恭喜你购买物品成功")
      end
    elseif 关键字 == "角色" then
       local 账号信息 = table.loadstring(读入文件(程序目录..[[data/]]..玩家数据[id].角色.账号..[[/信息.txt]]))
      if #账号信息 >= 6 then
        发送数据(玩家数据[id].连接id,7,"#y/您的账号信息已满,无法购买新的角色")
        return
      elseif 玩家数据[id].角色.账号 == 藏宝阁数据[关键字][编号].角色信息.账号 then
        发送数据(玩家数据[id].连接id,7,"#y/你不能购买自己的角色")
        return
      end
      账号信息[#账号信息+1] = 藏宝阁数据[关键字][编号].所有者
      写出文件([[data/]]..玩家数据[id].角色.账号..[[/]].."/信息.txt",table.tostring(账号信息))
      账号信息 = {}
      local 账号 = 藏宝阁数据[关键字][编号].角色信息.账号
      账号信息 = table.loadstring(读入文件([[data/]]..账号..[[/信息.txt]]))
      for i=1,#账号信息 do
        if 账号信息[i] == 藏宝阁数据[关键字][编号].所有者 or tonumber(账号信息[i]) == 藏宝阁数据[关键字][编号].所有者 then
          table.remove(账号信息,i)
        end
      end
      写出文件([[data/]]..账号..[[/]].."/信息.txt",table.tostring(账号信息))
      local 角色信息=table.loadstring(读入文件([[data/]]..账号..[[/]]..藏宝阁数据[关键字][编号].所有者..[[/角色.txt]]))
      角色信息.账号 = 玩家数据[id].角色.账号
      角色信息.藏宝阁出售 = nil
      写出文件([[data/]]..账号..[[/]]..藏宝阁数据[关键字][编号].所有者..[[/角色.txt]],table.tostring(角色信息))
      角色信息 = nil
      移动文件1(玩家数据[id].角色.账号,账号,id,藏宝阁数据[关键字][编号].所有者)
      藏宝阁记录 = 藏宝阁记录..玩家数据[id].角色.名称.."ID为:"..id.."通过藏宝阁购买ID:"..藏宝阁数据[关键字][编号].所有者.."角色花费"..价格.."银两,角色转换成功!\n"
      table.remove(藏宝阁数据[关键字],编号)
      发送数据(玩家数据[id].连接id,7,"#y/恭喜你购买物品成功")
    end
    玩家数据[id].角色:扣除仙玉(买家价格,0,0,"藏宝阁购买",id)
    发送数据(玩家数据[id].连接id,7,"#y/支付:"..买家价格.."点仙玉!")
    if 玩家数据[对方id] == nil then
      if 寄存数据[对方id] == nil then
        寄存数据[对方id] = {[1]={类型="仙玉",数额=价格}}
      else
        寄存数据[对方id][#寄存数据[对方id]+1] = {类型="银子",数额=价格}
      end
    else
       玩家数据[对方id].角色:添加仙玉(math.floor(价格*0.95),玩家数据[对方id].账号,对方id,"藏宝阁出售")
        发送数据(玩家数据[对方id].连接id,7,"#y/藏宝阁物品成功出售,并获得"..价格.."点仙玉!!!")
    end
    for i,v in pairs(观察藏宝阁数据) do
      if 玩家数据[i] ~= nil then
        发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
      else
        观察藏宝阁数据[i] = nil
      end
    end
  end
end

function 系统处理类:藏宝阁取回处理(id,编号,类型)
  local 关键字 = "其他"
  if 类型 == 1 then
    关键字 = "装备"
  elseif 类型 == 3 then
    关键字 = "灵饰"
  elseif 类型 == 4 then
    关键字 = "召唤兽"
  elseif 类型 == 5 then
    关键字 = "银两"
  elseif 类型 == 6 then
    关键字 = "其他"
  end
  if 类型 == 7 then
    发送数据(玩家数据[id].连接id, 7, "#y/取回角色请前往XXXX取回")
    return 0
  elseif 藏宝阁数据[关键字][编号] == nil then
    发送数据(玩家数据[id].连接id, 7, "#y/数据已经刷新请重新打开藏宝阁")
    return 0
  elseif 藏宝阁数据[关键字][编号].结束时间 - os.time() <= 30 then
    发送数据(玩家数据[id].连接id, 7, "#y/该物品即将超时下架,无法进行取回处理")
    return 0
  elseif 藏宝阁数据[关键字][编号].所有者 ~= id then
    发送数据(玩家数据[id].连接id, 7, "#y/这不是你的商品你无法取回")
    return 0
  else
    if 关键字 ~= "银两" and 关键字 ~= "召唤兽" then
      self.临时格子=玩家数据[id].角色:取道具格子()
      if self.临时格子==0 then
       发送数据(玩家数据[id].连接id,7,"#y/您当前的包裹空间已满，无法取回")
        return 0
      end
      self.可用id = 玩家数据[id].道具:取新编号()
      玩家数据[id].道具.数据[self.可用id] = 藏宝阁数据[关键字][编号].物品
      玩家数据[id].角色.道具[self.临时格子] = self.可用id
      table.remove(藏宝阁数据[关键字],编号)
      发送数据(玩家数据[id].连接id,7,"#y/取回物品成功")
    elseif 关键字 == "银两" then
      玩家数据[id].角色:添加银子(藏宝阁数据[关键字][编号].数额,"藏宝阁取回"..关键字,1)
      table.remove(藏宝阁数据[关键字],编号)
      发送数据(玩家数据[id].连接id,7,"#y/恭喜你取回物品成功")
    elseif 关键字 == "召唤兽" then
      if #玩家数据[id].召唤兽.数据 >= 7 then
        发送数据(玩家数据[id].连接id,7,"#y/您的召唤兽空间已满，无法取回")
          return 0
      else
        玩家数据[id].召唤兽.数据[#玩家数据[id].召唤兽.数据+1] = 藏宝阁数据[关键字][编号].召唤兽
        table.remove(藏宝阁数据[关键字],编号)
        发送数据(玩家数据[id].连接id,7,"#y/恭喜你取回物品成功")
      end
    end
    for i,v in pairs(观察藏宝阁数据) do
      if 玩家数据[i] ~= nil then
        发送数据(玩家数据[i].连接id,116.1 , 藏宝阁数据)
      else
        观察藏宝阁数据[i] = nil
      end
    end
  end
end

function 系统处理类:购买戏票(id,内容)
	local 名称=内容.项目
	local 价格=150
	-- if 名称=="一斛珠" then
	-- 	价格=150
	-- 	if 调试模式 then
	-- 		 价格=150
	-- 	end
	-- 	if 玩家数据[id].角色:扣除副本积分(价格) then
	-- 		 玩家数据[id].道具:给予道具(id,"癫散戏票·一斛珠")
	-- 		 常规提示(id,"#Y购买#G癫散戏票·一斛珠#Y成功。")
	-- 	end
if 名称=="五更寒" then
		if 调试模式 then
			 价格=200
		end
		if 玩家数据[id].角色:扣除副本积分(价格) then
			 玩家数据[id].道具:给予道具(id,"癫散戏票·五更寒")
			 常规提示(id,"#Y购买#G癫散戏票·五更寒#Y成功。")
		end
	elseif 名称=="双城记" then
		if 调试模式 then
			 价格=150
		end
		if 玩家数据[id].角色:扣除副本积分(价格) then
			 玩家数据[id].道具:给予道具(id,"癫散戏票·双城记")
			 常规提示(id,"#Y购买#G癫散戏票·双城记#Y成功。")
		end
	elseif 名称=="无相菩提" then
		常规提示(id,"这个戏票目前一票难求，请先选择其他的戏票吧。")
		return
	end
end

function 系统处理类:如梦奇谭开启(id,内容)
	local 选择=内容.类型
	local 临时={
		一斛珠="癫散戏票·一斛珠",
		五更寒="癫散戏票·五更寒",
		双城记="癫散戏票·双城记",
	}
	添加对话(id,"癫散班主","酒仙","准备好了吗？这便开启如梦奇谭“"..临时[选择].."”！",{"正等着这一刻哪！（"..选择.."）","还是算了吧"})
end

function 系统处理类:打字机回调(id,内容)
	local 类型=内容.类型
	if 类型 == "一斛珠" then
	elseif 类型 == "五更寒序" then
		local 副本id = 任务处理类:取副本id(id,670)
		if 副本id == 0 or 副本id ~= id  then
			return
		end

	elseif 类型 == "五更寒渔村" then
		local 副本id = 任务处理类:取副本id(id,670)
		if 副本id == 0 or 副本id ~= id  then
			return
		end
	elseif 类型 == "五更寒魔化村民赌徒" then
		local 副本id = 任务处理类:取副本id(id,670)
		if 副本id == 0 or 副本id ~= id  then
			return
		end
		if 副本数据.如梦奇谭之五更寒.进行[副本id].进程==9 and  副本数据.如梦奇谭之五更寒.进行[副本id].阶段== 0 then
			副本数据.如梦奇谭之五更寒.进行[副本id].阶段 = 1
			刷新任务670(id)
		end
	elseif 类型 == "五更寒魔化村民夜叉" then
		local 副本id = 任务处理类:取副本id(id,670)
		if 副本id == 0 or 副本id ~= id  then
			return
		end
		if 副本数据.如梦奇谭之五更寒.进行[副本id].进程==9 and  副本数据.如梦奇谭之五更寒.进行[副本id].阶段== 3 then
			副本数据.如梦奇谭之五更寒.进行[副本id].进程 = 10
			刷新队伍任务追踪(id)
			刷新任务670(id)
		end
	elseif 类型 =="五更寒结束" then
		发送数据(玩家数据[id].连接id,6560,false)
		玩家数据[id].角色:取消任务(玩家数据[id].角色:取任务(670))
		地图处理类:跳转地图(id,1501,24,16)
	end
end

function 系统处理类:第二场景回调(数字id,内容)
	local 类型=内容.类型
	local 队长=玩家数据[数字id].队伍
	if 类型[1]==100 and 类型[2]==1 then --五更寒动画1 村长家
		if 数字id==队长 then
			地图处理类:跳转地图(数字id,7001,36,31) --动画完毕后跳转大雄宝殿
		end
	elseif 类型[1]==100 and 类型[2]==2 then --五更寒动画2 海边
		if 数字id==队长 then
			地图处理类:跳转地图(数字id,7005,11,33) --动画完毕后跳转 长风航路 这里看你怎么解决这个地图
		end
		发送数据(玩家数据[数字id].连接id,6558,{调用={100,3}})
	elseif 类型[1]==100 and 类型[2]==4 then --五更寒动画2 海边
	elseif 类型[1]==100 and 类型[2]==6 then --五更寒动画2 海边
		local 副本id = 任务处理类:取副本id(数字id,670)
		if 副本id == 0 or 副本id ~= 数字id  then
			return
		end
		if 副本数据.如梦奇谭之五更寒.进行[副本id].进程==11 and  副本数据.如梦奇谭之五更寒.进行[副本id].阶段== 0 then
			副本数据.如梦奇谭之五更寒.进行[副本id].阶段 = 1
			刷新任务670(数字id)
		end
	elseif 类型[1]==100 and 类型[2]==3 then --五更寒动画3 坐船之后
		local text1={"不知过了多久……"}
		发送数据(玩家数据[数字id].连接id,6557,{文本=text1,横排显示=true,类型="五更寒动画4",动画调用={100,4},字体=nil,音乐=nil,背景=nil})
	end
end

function 系统处理类:召唤兽携带上限(数字id)
	if 玩家数据[数字id].角色.召唤兽携带上限 < 12 then
		local 数额 = 10000000
		if 玩家数据[数字id].角色.召唤兽携带上限 == 8 then
			数额 = 5000000
		elseif 玩家数据[数字id].角色.召唤兽携带上限 == 9 then
			数额 = 5000000
		elseif 玩家数据[数字id].角色.召唤兽携带上限 == 10 then
			数额 = 5000000
		elseif 玩家数据[数字id].角色.召唤兽携带上限 == 11 then
			数额 = 5000000
		elseif 玩家数据[数字id].角色.召唤兽携带上限 == 12 then
			数额 = 5000000
		end

	--	if not 玩家数据[数字id].角色.武神坛角色 and 玩家数据[数字id].角色:扣除银子(数额,0,0,"召唤兽携带上限",1)  then
	if  玩家数据[数字id].角色:扣除银子(数额,0,0,"召唤兽携带上限",1)  or 玩家数据[数字id].角色.武神坛角色 then
			玩家数据[数字id].角色.召唤兽携带上限 = 玩家数据[数字id].角色.召唤兽携带上限 +1
			发送数据(玩家数据[数字id].连接id,31,玩家数据[数字id].角色:取总数据1())
			常规提示(数字id,"#Y你的召唤兽携带上限增加至#G"..玩家数据[数字id].角色.召唤兽携带上限.."个。")
		end
	else
		常规提示(数字id,"#Y你的召唤兽携带上限到达了最大无法在扩充")
	end
end

function 系统处理类:获取点卡数据(id)
  local 点卡=f函数.读配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡")
  if 点卡 == nil or 点卡 == "" or 点卡 == "空" then
    f函数.写配置(程序目录..[[data\]]..玩家数据[id].账号..[[\账号信息.txt]],"账号配置","点卡",0)
    点卡 = 0
  end
  发送数据(玩家数据[id].连接id,92,{兑换比例=兑换比例,点卡=点卡})
end

function 系统处理类:进入游戏数据表处理(数字id)
if 每日任务[数字id]==nil then
			 每日任务[数字id]={日常任务={},副本任务={},活跃度={当前=0,总活跃=0},签到数据={}}--{节日活动={},日常任务={},挑战竞技={},副本任务={},总活跃=0,领取活跃={}}
		end
		if not 玩家数据[数字id].角色.新手礼包 then
			礼包奖励类:新手使者奖励(数字id)
			玩家数据[数字id].角色.新手礼包= true
		end

if 玩家数据[数字id].角色.BPMC ~= "无帮派" then
			local bh = 玩家数据[数字id].角色.BPBH
			if 取所有帮派[bh] and 取所有帮派[bh].已解散 and 帮派数据[bh]==nil then
				 闪烁消息(数字id,"因为您所处的帮派解散，你现在已经是无帮派人士了！")
				 玩家数据[数字id].角色.BG = 0
				玩家数据[数字id].角色.BPBH = 0
				 玩家数据[数字id].角色.BPMC = "无帮派"
			elseif 帮派数据[bh] and 帮派数据[bh].成员数据[数字id] then
				帮派数据[bh].成员数据[数字id].在线 = true
				 帮派数据[bh].成员数据[数字id].离线时间 = os.time()
				 帮派数据[bh].成员数据[数字id].名称 = 玩家数据[数字id].角色.名称
				 帮派数据[bh].成员数据[数字id].门派 = 玩家数据[数字id].角色.门派
				 帮派数据[bh].成员数据[数字id].等级 = 玩家数据[数字id].角色.等级
			else
				if 帮派数据[bh] and 帮派数据[bh].成员数据[数字id]==nil then
					  玩家数据[数字id].角色.BG = 0
					 玩家数据[数字id].角色.BPMC = "无帮派"
					  玩家数据[数字id].角色.BPBH = 0
					  闪烁消息(数字id,"#H/你被请离了帮派，你现在已经是无帮派人士了！")
				end
			end
		end
		if 线下自动抓鬼数据[数字id] and 线下自动抓鬼数据[数字id].leij~=0 then
			local 等级=玩家数据[数字id].角色.等级
			local jy=qz(等级*16*HDPZ["自动抓鬼"].经验)*线下自动抓鬼数据[数字id].leij
			local cb=qz(等级*10*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			local yz=qz(等级*30*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			添加最后对话(数字id,"本次线下自动抓鬼次数=#G"..线下自动抓鬼数据[数字id].leij.."#W，获得经验=#G"..jy.."#W，获得储备=#G"..cb.."#W。")
			玩家数据[数字id].角色:添加经验(jy,"捉鬼")
			-- 玩家数据[id].角色:添加银子(银子*HDPZ["自动抓鬼"].银子,"捉鬼",1)
			玩家数据[数字id].角色:添加银子(yz,"捉鬼",1)
			玩家数据[数字id].角色:添加储备(cb,"捉鬼",1)
			if 线下自动抓鬼数据[数字id].duizhang and 玩家数据[数字id].角色.自动抓鬼 then
				玩家数据[数字id].角色.自动抓鬼.次数=玩家数据[数字id].角色.自动抓鬼.次数-线下自动抓鬼数据[数字id].leij
				if 玩家数据[数字id].角色.自动抓鬼.次数<=0 then
					玩家数据[数字id].角色.自动抓鬼.次数=0
				end
			end
			线下自动抓鬼数据[数字id]=nil
		end
end

function 系统处理类:重置地图数据(数字id)
	if 玩家数据[数字id] and 玩家数据[数字id].角色 then
        if not 玩家数据[数字id].角色.地图数据 then
        	 玩家数据[数字id].角色.地图数据 ={编号 = 1003, x = 400, y = 500,方向=0}
        end

		 if not 玩家数据[数字id].角色.地图数据.编号 then
		 	玩家数据[数字id].角色.地图数据.编号 = 1001
		 	玩家数据[数字id].角色.地图数据.x=192*20
		 	玩家数据[数字id].角色.地图数据.y=105*20
		 end
	end
end


检测pk掉线id = 0
function 系统处理类:断开游戏(数字id,多角色)



	if 玩家数据[数字id]~=nil then
		助战处理类:所有助战下线(数字id)

			检测pk掉线id=数字id



		if 玩家数据[数字id].摊位数据~=nil then
			玩家数据[数字id].离线摆摊=true
			return
		elseif 玩家数据[数字id].角色.地图数据.编号==5005 and 初始活动.昆仑仙境[数字id] and 初始活动.昆仑仙境[数字id].次数 and 初始活动.昆仑仙境[数字id].次数 < 初始活动.昆仑仙境[数字id].最大次数 then
			玩家数据[数字id].离线摆摊=true
			return
		end
	end
	if 玩家数据[数字id]~=nil and 玩家数据[数字id].zhandou~=0 then
		if 战斗准备类.战斗盒子[玩家数据[数字id].zhandou]~=nil then
			if 调试模式 then
				战斗准备类.战斗盒子[玩家数据[数字id].zhandou]:强制结束战斗()
			else
				战斗准备类.战斗盒子[玩家数据[数字id].zhandou]:设置断线玩家(数字id)
				return
			end
		else
			玩家数据[数字id].zhandou=0
		end
	end
	if 玩家数据[数字id]~=nil then
		if 玩家数据[数字id].角色.变身数据 ~= nil then
			玩家数据[数字id].角色:取消任务(玩家数据[数字id].角色:取任务(1))
			玩家数据[数字id].角色.变身数据 = nil
			玩家数据[数字id].角色:刷新信息()
		end
		if 玩家数据[数字id].交易信息~=nil then
			玩家数据[数字id].道具:取消交易(数字id)
		end
		if 玩家数据[数字id].队伍~=0 then
			队伍处理类:退出队伍(数字id)
		end
		if 玩家数据[数字id]==nil then return end
		if not 多角色 then
			玩家数据[数字id].角色.上次退出 = os.time() --记录一个下线时间，方便清除垃圾号
		  --帮派处理
		if 玩家数据[数字id].角色.BPMC ~= "无帮派" then
			local bh = 玩家数据[数字id].角色.BPBH
			if 取所有帮派[bh] and 取所有帮派[bh].已解散==nil and 帮派数据[bh].成员数据[数字id] then
				if 帮派数据[bh].成员数据[数字id].职务 == "商人" then
					帮派数据[bh].成员数据[数字id].职务 =  "帮众"
					  玩家数据[数字id].角色:删除称谓(帮派数据[bh].帮派名称.."商人")
					  玩家数据[数字id].角色:添加称谓(帮派数据[bh].帮派名称.."帮众")
				 end
				 帮派数据[bh].成员数据[数字id].在线 = false
				 帮派数据[bh].成员数据[数字id].离线时间 = os.time()
			 end
		end
		--帮派处理
		玩家数据[数字id].角色:清空临时包裹()
		end
		self:清除断开数据(数字id)
		玩家数据[数字id].角色:存档() --测试模式
		地图处理类:移除玩家(数字id)
		if not 多角色 then
		__S服务:输出(string.format('玩家(%s)退出游戏丨ID:%s丨账号:%s丨IP:%s',玩家数据[数字id].角色.名称,数字id,玩家数据[数字id].账号,玩家数据[数字id].ip))
		服务端参数.在线人数=服务端参数.在线人数-1
		local rs=服务端参数.在线人数
		-- if rs>30 then
		--     rs=取随机数(30,35)
		-- end

		__S服务:置标题(_QJBT.."--当前在线人数"..rs)--..服务端参数.在线人数)
		end
		助战处理类:所有助战下线(数字id)
		玩家数据[数字id]=nil
	end
end

function 系统处理类:进入游戏(id,账号,数字id,ip,假人)
	if id =="假人" then
		id =8888888
	end
	数字id=数字id+0
	 LianjieID[id]=true
	if 玩家数据[数字id]~=nil  then --检查是否有上线纪录
		if 玩家数据[数字id].交易信息~=nil then
			玩家数据[数字id].道具:取消交易(数字id)
		end
		发送数据(玩家数据[数字id].连接id,998,"您的账号已经从另一台电脑上登录，如非本人操作，请立即修改游戏密码")
		玩家数据[数字id].连接id=id
		玩家数据[数字id].角色.连接id=id--外挂
		发送数据(id,9996,{效验码=__数据验证.效验码}) --防修改
		玩家数据[数字id].角色:银子检查纠错()
		发送数据(id,5,玩家数据[数字id].角色:取总数据())
		玩家数据[数字id].道具:索要道具3(id,数字id)
		发送数据(id,16,玩家数据[数字id].召唤兽.数据)
		发送数据(id,25,宝宝队伍图)
		发送数据(id,997,{id=数字id,用户="正式用户",名称=玩家数据[数字id].角色.名称,账号=玩家数据[数字id].账号})
		发送数据(id,43,时辰信息.昼夜)
		发送数据(id,433,时辰信息.天气)
		发送数据(id,11,时辰信息.当前)
				if 玩家数据[数字id].角色.多角色操作 then
    发送数据(玩家数据[数字id].连接id,117)
    else
    发送数据(玩家数据[数字id].连接id,118)
    end
		商城处理类:取商品组数据(数字id, 18)
		玩家数据[数字id].角色:刷新任务跟踪()
		地图处理类:重连加入(数字id,玩家数据[数字id].角色.地图数据.编号,玩家数据[数字id].角色.地图数据.x,玩家数据[数字id].角色.地图数据.y)
		if 玩家数据[数字id].离线摆摊 then
		end
		if 玩家数据[数字id].摊位数据~=nil then
			玩家数据[数字id].道具:收摊处理(玩家数据[数字id].连接id,数字id)
		end

		if 玩家数据[数字id].zhandou~=0 then
			if 玩家数据[数字id].队伍~=0 then
				队伍处理类:索取队伍信息(数字id,4004)
				if 玩家数据[数字id].队长 then
					发送数据(玩家数据[数字id].连接id,4006)
				end
			end
			玩家数据[数字id].道具:重置法宝回合(数字id)
			if 调试模式 then
				 战斗准备类.战斗盒子[玩家数据[数字id].zhandou]:强制结束战斗()
			else
				战斗准备类.战斗盒子[玩家数据[数字id].zhandou]:设置重连玩家(数字id)
			end
		else
			 if 玩家数据[数字id].队伍~=0 then
				队伍处理类:退出队伍(数字id)
			end
		end
		助战处理类:所有助战下线(数字id)
		if 线下自动抓鬼数据[数字id] and 线下自动抓鬼数据[数字id].leij~=0 then
			local 等级=玩家数据[数字id].角色.等级
			local jy=qz(等级*165*HDPZ["自动抓鬼"].经验)*线下自动抓鬼数据[数字id].leij
			local cb=qz(等级*120*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			local yz=qz(等级*30*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			添加最后对话(数字id,"本次线下自动抓鬼次数=#G"..线下自动抓鬼数据[数字id].leij.."#W，获得经验=#G"..jy.."#W，获得储备=#G"..cb.."#W。")
			玩家数据[数字id].角色:添加经验(jy,"捉鬼")
			玩家数据[数字id].角色:添加储备(cb,"捉鬼",1)
			玩家数据[数字id].角色:添加银子(yz,"捉鬼",1)
			if 线下自动抓鬼数据[数字id].duizhang and 玩家数据[数字id].角色.自动抓鬼 then
				玩家数据[数字id].角色.自动抓鬼.次数=玩家数据[数字id].角色.自动抓鬼.次数-线下自动抓鬼数据[数字id].leij
				if 玩家数据[数字id].角色.自动抓鬼.次数<=0 then
					玩家数据[数字id].角色.自动抓鬼.次数=0
				end
			end
			线下自动抓鬼数据[数字id]=nil
		end
		__S服务:输出(string.format('玩家(%s)顶号进入游戏丨ID:%s丨账号:%s丨IP:%s丨连接ID:%s',玩家数据[数字id].角色.名称,数字id,玩家数据[数字id].账号,玩家数据[数字id].角色.ip,id))
	else
		----------------------------初始化数据
		玩家数据[数字id]={连接id=id}
		玩家数据[数字id].角色=角色处理类:创建(id)
		玩家数据[数字id].道具=道具处理类:创建(数字id)
		玩家数据[数字id].召唤兽=召唤兽处理类:创建(数字id)
		玩家数据[数字id].道具:加载数据(账号,数字id)
		玩家数据[数字id].角色:加载数据(账号,数字id)
		玩家数据[数字id].召唤兽:加载数据(账号,数字id)
		玩家数据[数字id].神器=神器类:创建(数字id)
		玩家数据[数字id].神器:加载数据(账号,数字id)
		玩家数据[数字id].自动回收=自动回收类:创建(数字id)
		玩家数据[数字id].自动回收:加载数据(账号,数字id)
	if 玩家数据[数字id].角色.藏宝阁出售 ~= nil then
    常规提示(数字id,"#Y该角色已经被上架藏宝阁,无法进入游戏,可以使用任意角色在XX处使用ID和取回密码取回账号")
          return
        end
		道具仓库数据[数字id]={}
		宝宝仓库数据[数字id]={}
		道具仓库数据[数字id].道具=道具仓库:创建(数字id)
		道具仓库数据[数字id].道具:加载数据(账号,数字id)
		宝宝仓库数据[数字id].召唤兽=召唤兽仓库:创建(数字id)
		宝宝仓库数据[数字id].召唤兽:加载数据(账号,数字id)

		玩家数据[数字id].账号=账号
		玩家数据[数字id].角色.账号=账号
		玩家数据[数字id].结束等待=os.time()
		玩家数据[数字id].当前频道=os.time()
		玩家数据[数字id].世界频道=os.time()
		玩家数据[数字id].传闻频道=os.time()
		玩家数据[数字id].遇怪时间=os.time()+取随机数(10,20)
		玩家数据[数字id].队伍=0
		玩家数据[数字id].zhandou=0
		玩家数据[数字id].guanzhan=0
		玩家数据[数字id].角色.战斗开关 = false
		玩家数据[数字id].连接id=id
		玩家数据[数字id].商品列表=0
		if 玩家数据[数字id].角色.玄灵珠==nil then
		玩家数据[数字id].角色.玄灵珠={类型="回春",破军=0,回春=0,空灵=0,噬魂=0}
		end
		-------------------------------武神坛
    if 武神坛数据[账号]==nil then
    	if 数字id < 900000 then
	    	武神坛数据[账号]=武神坛类:创建(账号)
	    end
    end
    -------------------------------
    if f函数.读配置(程序目录..[[data\]]..玩家数据[数字id].账号..[[\账号信息.txt]],"账号配置","管理")=="1" then
			玩家数据[数字id].角色.GM管理员 = true
		else
		  玩家数据[数字id].角色.GM管理员 = nil
		end
		玩家数据[数字id].子角色操作 =nil
		玩家数据[数字id].角色.连接id=id--外挂
		发送数据(id,9996,{效验码=__数据验证.效验码}) --防修改
		发送数据(id,5,玩家数据[数字id].角色:取总数据())
		玩家数据[数字id].道具:索要道具3(id,数字id)
		发送数据(id,16,玩家数据[数字id].召唤兽.数据)
		发送数据(id,25,宝宝队伍图)--每次进入游戏发送一次给玩家，到客户端去排序
		发送数据(id,997,{id=数字id,用户="正式用户",名称=玩家数据[数字id].角色.名称,账号=玩家数据[数字id].账号})
		发送数据(id,43,时辰信息.昼夜)
		发送数据(id,433,时辰信息.天气)
	if 玩家数据[数字id].角色.多角色操作 then
     发送数据(玩家数据[数字id].连接id,117)
  else
      发送数据(玩家数据[数字id].连接id,118)
  end
		发送数据(id,11,时辰信息.当前)
		商城处理类:取商品组数据(数字id, 18)
		------------------------
		if 假人 then--钓鱼
			local Q_假人武器={
			剑侠客={"擒龙",3},
	    逍遥生={"星瀚",7},
	    飞燕女={"朝夕",11},
	    英女侠={"浮犀",4},
	    巫蛮儿={"赤明",15},
	    神天兵={"碎寂",9},
	    龙太子={"弑皇",1},
	    舞天姬={"流云",5},
	    玄彩娥={"醍醐",8},
	    桃夭夭={"荒尘",18},
	    虎头怪={"裂天",2},
	    巨魔王={"鸣鸿",12},
	    狐美人={"霜陨",10},
	    骨精灵={"离钩",6},
	    杀破狼={"云雷万里",14},
	    羽灵神={"若木",14},
	    偃无师={"长息",16},
	    鬼潇潇={"晴雪",17},
	    -- 影精灵={"非天(乾)",910},
			}
			玩家数据[数字id].角色.装备[3]=99
			玩家数据[数字id].道具.数据[99]={五行="火",总类=2,命中=446,名称="云鹤",伤害=348,耐久=568,子类=18,耐力=10,开运孔数={当前=0,上限=4},价格=10000,角色限制={[1]="桃夭夭"},魔力=18,生产方式="系统产出",鉴定=true,识别码="1001_1713617643_7243_952",特效={[1]="无级别限制"},熔炼效果={},级别限制=100,分类=3,专用=1001,特技="流云诀"}
			玩家数据[数字id].道具.数据[99].名称 = Q_假人武器[玩家数据[数字id].角色.模型][1]
--{1"枪矛",2"斧钺",3"剑","4双短剑",5"飘带","6爪刺",7"扇","8魔棒","9锤","10鞭","11环圈","12刀","13法杖","14弓弩","15宝珠","16巨剑","17伞","18灯笼","头盔","发钗","项链","女衣","男衣","腰带","鞋子"}
			玩家数据[数字id].道具.数据[99].子类 = Q_假人武器[玩家数据[数字id].角色.模型][2]
			玩家数据[数字id].道具.数据[99].级别限制 = 160
			玩家数据[数字id].道具.数据[99].角色限制[1]=玩家数据[数字id].角色.模型
		end

		if not 玩家数据[数字id].角色.地图数据.编号 then -- 这个编号 弄掉了  就找不到地图了 这里会重新补差
			玩家数据[数字id].角色.地图数据.编号=1001
			玩家数据[数字id].角色.地图数据.x=203
			玩家数据[数字id].角色.地图数据.y=111
		end
		地图处理类:加入玩家(数字id,玩家数据[数字id].角色.地图数据.编号,玩家数据[数字id].角色.地图数据.x,玩家数据[数字id].角色.地图数据.y)
		if 玩家数据[数字id].队伍~=0 then
			 队伍处理类:退出队伍(数字id)
		end
		剑会天下:踢出地图(数字id) --剑会天下
		剑会天下:单独重置赛季剑会数据(数字id) --剑会天下

		if 每日任务[数字id]==nil then
			 每日任务[数字id]={日常任务={},副本任务={},节日活动={},挑战竞技={},活跃度={当前=0,总活跃=0},签到数据={}}--{节日活动={},日常任务={},挑战竞技={},副本任务={},总活跃=0,领取活跃={}}
		end
     if 移动数据[数字id] == nil then
        移动数据[数字id]={移动速度=0,加速开关1=0}
     elseif 移动数据[数字id]~=nil and 移动数据[数字id].移动速度 > 40 then
        移动数据[数字id].移动速度 = 40
     end
    if 施法数据[数字id] == nil then
        施法数据[数字id]={施法速度=10,加速开关3=0}
     end
      if 攻击数据[数字id] == nil then
        攻击数据[数字id]={攻击速度=10,加速开关2=0}
     end
    if 玩家数据[数字id].角色.月卡 == nil then
      玩家数据[数字id].角色.月卡 = {生效=false,到期时间=0}
    end
     if  玩家数据[数字id].角色.采矿数据 == nil then
         玩家数据[数字id].角色.采矿数据= {熟练度=0,矿业声望=0}
         end
     if  玩家数据[数字id].角色.套装激活 == nil then
         玩家数据[数字id].角色.套装激活= 0
     end
     if  玩家数据[数字id].角色.套装名称 == nil then
         玩家数据[数字id].角色.套装名称= 0
     end
		if 玩家数据[数字id].角色.变身数据 ~= nil and 玩家数据[数字id].角色:取任务(1) == 0 then
			玩家数据[数字id].角色:取消任务(玩家数据[数字id].角色:取任务(1))
			玩家数据[数字id].角色.变身数据 = nil
		end
		if 玩家数据[数字id]~=nil and 玩家数据[数字id].摊位数据~=nil then --可取消
			玩家数据[数字id].道具:收摊处理(玩家数据[数字id].连接id,数字id)
		end
		玩家数据[数字id].角色:更新任务()
		玩家数据[数字id].角色:刷新任务跟踪()
		玩家数据[数字id].角色:取快捷技能(数字id)
		if 玩家数据[数字id].角色.新号创建==1 then --为啥还有这个数据
			玩家数据[数字id].角色.新号创建=nil
			 发送数据(id,105,{头像="双蓝字",标题="出生于桃源村！",说明="首次登陆游戏，快去完成新手剧情吧"})
		end
		玩家数据[数字id].角色.ip=ip
		if 玩家数据[数字id]~=nil and 玩家数据[数字id].角色 then
			self:进入事件(数字id,玩家数据[数字id].连接id)
			玩家数据[数字id].角色:刷新信息() --  我加的,进入后重新穿戴装备
		end
        if 通天塔数据[数字id] == nil then
           通天塔数据[数字id] = {名称 = 玩家数据[数字id].角色.名称,层数 = 0}
           end
		--帮派处理
		if 玩家数据[数字id].角色.BPMC ~= "无帮派" then
			local bh = 玩家数据[数字id].角色.BPBH
			if 取所有帮派[bh] and 取所有帮派[bh].已解散 and 帮派数据[bh]==nil then
				 闪烁消息(数字id,"因为您所处的帮派解散，你现在已经是无帮派人士了！")
				 玩家数据[数字id].角色.BG = 0
				玩家数据[数字id].角色.BPBH = 0
				 玩家数据[数字id].角色.BPMC = "无帮派"
			elseif 帮派数据[bh] and 帮派数据[bh].成员数据~=nil and 帮派数据[bh].成员数据[数字id] then
				帮派数据[bh].成员数据[数字id].在线 = true
				 帮派数据[bh].成员数据[数字id].离线时间 = os.time()
				 帮派数据[bh].成员数据[数字id].名称 = 玩家数据[数字id].角色.名称
				 帮派数据[bh].成员数据[数字id].门派 = 玩家数据[数字id].角色.门派
				 帮派数据[bh].成员数据[数字id].等级 = 玩家数据[数字id].角色.等级
			else
				if 帮派数据[bh] and 帮派数据[bh].成员数据~=nil and 帮派数据[bh].成员数据[数字id]==nil then
					  玩家数据[数字id].角色.BG = 0
					 玩家数据[数字id].角色.BPMC = "无帮派"
					  玩家数据[数字id].角色.BPBH = 0
					  闪烁消息(数字id,"#H/你被请离了帮派，你现在已经是无帮派人士了！")
				end
			end
		end
		if 线下自动抓鬼数据[数字id] and 线下自动抓鬼数据[数字id].leij~=0 then
			local 等级=玩家数据[数字id].角色.等级
			local jy=qz(等级*165*HDPZ["自动抓鬼"].经验)*线下自动抓鬼数据[数字id].leij
			local cb=qz(等级*120*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			local yz=qz(等级*30*HDPZ["自动抓鬼"].银子)*线下自动抓鬼数据[数字id].leij
			添加最后对话(数字id,"本次线下自动抓鬼次数=#G"..线下自动抓鬼数据[数字id].leij.."#W，获得经验=#G"..jy.."#W，获得储备=#G"..cb.."#W。")
			玩家数据[数字id].角色:添加经验(jy,"捉鬼")
			-- 玩家数据[id].角色:添加银子(银子*HDPZ["自动抓鬼"].银子,"捉鬼",1)
			玩家数据[数字id].角色:添加银子(yz,"捉鬼",1)
			玩家数据[数字id].角色:添加储备(cb,"捉鬼",1)
			if 线下自动抓鬼数据[数字id].duizhang and 玩家数据[数字id].角色.自动抓鬼 then
				玩家数据[数字id].角色.自动抓鬼.次数=玩家数据[数字id].角色.自动抓鬼.次数-线下自动抓鬼数据[数字id].leij
				if 玩家数据[数字id].角色.自动抓鬼.次数<=0 then
					玩家数据[数字id].角色.自动抓鬼.次数=0
				end
			end
			线下自动抓鬼数据[数字id]=nil
		end
		--帮派处理
    发送数据(玩家数据[数字id].连接id,380,玩家数据[数字id].道具:索要道具1(数字id)) --超级技能
--------------------------武神坛
		if 武神坛数据[账号] then
			 武神坛数据[账号]:是否武神坛地图(数字id)
		end
		--------------------------
		if 玩家数据[数字id].角色.月卡 and 玩家数据[数字id].角色.月卡.生效 then
			发送公告("#Y/ 天纵神武，英俊潇洒的顶级大佬#R".. 玩家数据[数字id].角色.名称 .."#Y/进入了游戏！！！")
		end
    if 玩家数据[数字id].角色.id特效 then   --进入游戏欢迎语
		广播消息({内容=format("#G/[%s]#Y%s #Y进入了游戏，快去探索梦幻世界吧",玩家数据[数字id].角色.名称,添加ID特效1(数字id)),频道="xt"})
		else
		广播消息({内容=format("#G/[%s]#Y #Y进入了游戏，快去探索梦幻世界吧",玩家数据[数字id].角色.名称,添加ID特效1(数字id)),频道="xt"})
		end

		if id ~=8888888 then
		__S服务:输出(string.format('玩家(%s)正常进入游戏丨ID:%s丨账号:%s丨IP:%s丨连接ID:%s',玩家数据[数字id].角色.名称,数字id,玩家数据[数字id].账号,玩家数据[数字id].角色.ip,id))
		服务端参数.在线人数=服务端参数.在线人数+1
		end
		local rs=服务端参数.在线人数
		__S服务:置标题(_QJBT.."--当前在线人数"..rs)--..服务端参数.在线人数)

	end
		刷新排行榜(数字id)
	self:加载进入信息(数字id,ip)
	self:清除进入数据(数字id)
	发送数据(玩家数据[数字id].连接id, 3705, 商城处理类.商品组[18])
	玩家数据[数字id].角色:银子检查纠错()
	if 玩家数据[数字id].角色.存银+玩家数据[数字id].角色.银子>=500000000 then
		银子jilu[数字id]={yz=玩家数据[数字id].角色.存银+玩家数据[数字id].角色.银子,zh=账号}
	end
end

function 系统处理类:加载进入信息(数字id,ip)
	帮派PK:进入游戏判断(数字id)
	助战处理类:加载助战列表(数字id)
end

function 系统处理类:清除进入数据(数字id)
	神秘宝箱[数字id]=nil
	抽奖转盘[数字id]=nil
	玩家数据[数字id].文墨对话=nil
	玩家数据[数字id].铃铛答题=nil
	玩家数据[数字id].答题间隔=nil
	玩家数据[数字id].最后操作=nil
	玩家数据[数字id].离线摆摊=nil
	玩家数据[数字id].宝宝内丹序号=nil
	玩家数据[数字id].物品序号=nil
	玩家数据[数字id].地图单位=nil
	玩家数据[数字id].转换坐骑=nil
	玩家数据[数字id].临时对话={}
	玩家数据[数字id].移动数据={}
	玩家数据[数字id].道具操作={}

	if 玩家数据[数字id].勾魂索中 then
		 玩家数据[数字id].角色:勾魂索死亡处理()
	end
	if 玩家数据[数字id].坐牢中 then
		 发送数据(玩家数据[数字id].连接id,3711)--坐牢不能走动，不能组队，不能使用道具
	end
end

function 系统处理类:清除断开数据(数字id)

	玩家数据[数字id].角色.飞行中=nil
end

function 系统处理类:取单个离线玩家(账号,id)

end

function 系统处理类:离线玩家存档(账号,id,sj)

end

function 系统处理类:染色方案重置(模型)
	local lssj
	if 模型 == "巫蛮儿" then
		lssj = 201
	elseif 模型 == "杀破狼" then
		lssj = 202
	elseif 模型 == "羽灵神" then
		lssj = 203
	elseif 模型 == "桃夭夭" then
		lssj = 204
	elseif 模型 == "偃无师" then
		lssj = 205
	elseif 模型 == "鬼潇潇" then
		lssj = 206
	end
	return lssj
end

function 系统处理类:检查装备(数字id,连接id)
	 local 发送 = false
	for n, v in pairs(玩家数据[数字id].角色.装备) do --这个是穿戴的装备
		local 格子 = 玩家数据[数字id].角色.装备[n]
		if 玩家数据[数字id].道具.数据 and 玩家数据[数字id].道具.数据[格子] ~= nil then
			if 玩家数据[数字id].道具.数据[格子].临时附魔 ~= nil  then
				for k,v in pairs(玩家数据[数字id].道具.数据[格子].临时附魔) do
					if v.数值 and v.时间 < os.time() then
						 玩家数据[数字id].角色:清除装备附魔属性(玩家数据[数字id].道具.数据[格子],玩家数据[数字id].道具.数据[格子].分类,k,v.数值)
						 玩家数据[数字id].道具.数据[格子].临时附魔[k] = nil
						 常规提示(数字id,"#Y你装备上的附魔特效消失了！")
					end
				end
			end
			if 玩家数据[数字id].道具.数据[格子].耐久 and 玩家数据[数字id].道具.数据[格子].耐久 <= 0 then--and 玩家数据[数字id].道具.数据[格子].刷新属性 == nil then
				玩家数据[数字id].道具.数据[格子].耐久=0
				local 道具格子=玩家数据[数字id].角色:取道具格子1("道具")
				if 道具格子~=0 and 玩家数据[数字id].道具.数据[格子] and 玩家数据[数字id].道具.数据[格子].分类 and 玩家数据[数字id].道具.数据[格子].分类<=6 then
					玩家数据[数字id].角色:卸下装备(玩家数据[数字id].道具.数据[格子],玩家数据[数字id].道具.数据[格子].分类)
					玩家数据[数字id].角色.装备[n]=nil
					玩家数据[数字id].角色["道具"][道具格子]=格子
					玩家数据[数字id].角色:刷新信息()
					玩家数据[数字id].道具:刷新道具行囊(数字id,"道具")
					发送数据(玩家数据[数字id].连接id,3503,玩家数据[数字id].角色:取装备数据())
					if n==3 then
						发送数据(玩家数据[数字id].连接id,3505)
						地图处理类:更新武器(数字id)
					end
					发送数据(玩家数据[数字id].连接id,12)
				end
				常规提示(数字id,"#Y你的装备耐久度不足请及时修理！")
			end
		end
	end
end

function 系统处理类:进入事件(id,连接id)
	for n=1,#玩家数据[id].角色.好友数据.好友 do
		local 好友id=玩家数据[id].角色.好友数据.好友[n].id
		if 玩家数据[好友id]~=nil and 玩家数据[id].角色.好友数据.好友[n].好友度~=nil and 玩家数据[id].角色.好友数据.好友[n].好友度>=10 then
			for i=1,#玩家数据[好友id].角色.好友数据.好友 do
				if 玩家数据[好友id].角色.好友数据.好友[i].id==id and 玩家数据[好友id].角色.好友数据.好友[i].好友度~=nil and 玩家数据[好友id].角色.好友数据.好友[i].好友度>=10 then
					发送数据(玩家数据[好友id].连接id,38,{内容="#W你的好友#Y"..玩家数据[id].角色.名称.."#W进入了游戏",频道="xt"})
				end
			end
		end
	end
end

function 系统处理类:创建账号(id,序号,内容)
	if 内容.ip~=nil and f函数.读配置(程序目录 .. "ip封禁.ini", "ip", 内容.ip)=="1" then
		__S服务:输出(string.format("封禁ip的客户进入试图进入(%s):%s:%s", 内容.id, 内容.ip,id))
		发送数据(id,7,"#R该IP地址已在服务器黑名单内，无法建立连接！")
		return 0
	end

	local 账号数量=1
	if f函数.文件是否存在(程序目录..[[data/]]..内容.账号)==false then  --未创建存档
		os.execute("md "..[[data\]]..内容.账号)
		 local file =io.open([[data\]]..内容.账号..[[\信息.txt]],"w")
		 file:write([[do local ret={} return ret end]])
		 file:close()
		 local file =io.open([[data\]]..内容.账号..[[\账号信息.txt]],"r")
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","密码",内容.密码)
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","管理","0")
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","仙玉","0")
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","点卡","0")
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","安全码","0")
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","创建时间",时间转换(os.time()))
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","创建ip",内容.ip)
		 f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","体验状态","0")
		 写配置("./sql/zc测试.ini","ip",内容.ip,账号数量)
		 写出文件([[data/]]..内容.账号..[[/消费记录.txt]],"日志创建")
		 发送数据(id,3.1)
		发送数据(id,7,"#G账号注册成功！！！")
	else

		发送数据(id,7,"#R该账户已被注册！")
	end
end

function 系统处理类:账号验证(id,序号,内容)
	if LianjieID[id] then
		发送数据(id,7,"#Y正在排队中……")
		 return
	end
	if 内容.ip~=nil and f函数.读配置(程序目录 .. "ip封禁.ini", "ip", 内容.ip)=="1" then
		__S服务:输出(string.format("封禁ip的客户进入试图进入(%s):%s:%s", 内容.id, 内容.ip,id))
		发送数据(id,7,"#R该IP地址已在服务器黑名单内，无法建立连接！")
		return 0
	elseif f函数.读配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","封禁")=="1" then
		 发送数据(id,7,"#R该账号已经被禁止登录游戏")
		 return
	 elseif f函数.读配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","时间封禁")~="空" then
		local sj=f函数.读配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","时间封禁")+0
		if os.time()-sj<0 then
			发送数据(id,7,"#R该账号被限制于"..时间转换(sj).."后才能登录")
			 return
		else
			f函数.写配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","时间封禁","空")
		end
	end

	if f函数.文件是否存在(程序目录..[[data/]]..内容.账号)==false then  --未创建存档
		发送数据(id,7,"#Y该账户未被注册！")
	else
		 local 密码=f函数.读配置(程序目录..[[data\]]..内容.账号..[[\账号信息.txt]],"账号配置","密码")
		 if 密码~=内容.密码 then
			  发送数据(id,7,"#Y您输入的密码不正确！")
			  return
		 end
		 发送数据(id,9996,{效验码=__数据验证.效验码}) --防修改
		 self:取角色选择信息(id,内容.账号)
	end
end

function 系统处理类:取角色选择信息(id,账号)
	self.临时文件=读入文件(程序目录..[[data/]]..账号..[[/信息.txt]])
	self.写入信息=table.loadstring(self.临时文件)
	self.发送数据={}
	for n=1,#self.写入信息 do
		local 武器数据={名称="",级别限制=0,子类=0}
		local 副武器数据 = {
			名称 = "",
			级别限制 = 0,
			子类 = 0
		}
		 self.读取文件=读入文件(程序目录..[[data/]]..账号..[[/]]..self.写入信息[n]..[[/角色.txt]])
		 self.还原数据=table.loadstring(self.读取文件)
		 if self.还原数据.装备[3]~=nil or self.还原数据.锦衣~=nil then
			local 临时文件=读入文件(程序目录..[[data/]]..账号..[[/]]..self.写入信息[n]..[[/道具.txt]])
			local 临时道具=table.loadstring(临时文件)
			if self.还原数据.装备[3]~=nil and 临时道具 then
				  武器数据=临时道具[self.还原数据.装备[3]]
			end
			if self.还原数据.模型 == "影精灵" and self.还原数据.装备[4] ~= nil then
				local aa = 临时道具[self.还原数据.装备[4]]
				if aa.子类 == 911 then
					副武器数据 = aa
				end
			end
			self.发送数据[#self.发送数据+1]={名称=self.还原数据.名称,副武器数据 = 副武器数据,等级=self.还原数据.等级,炫彩=self.还原数据.炫彩,炫彩组=self.还原数据.炫彩组,染色方案=self.还原数据.染色方案,染色组=self.还原数据.染色组,造型=self.还原数据.造型,武器数据=武器数据,门派=self.还原数据.门派,id=self.还原数据.数字id}
		end
	end
	发送数据(id,4,self.发送数据)
	self.发送数据={}
	self.读取文件=nil
	self.还原数据=nil
	-- local 密码=f函数.读配置(程序目录..[[data\]]..账号..[[\账号信息.txt]],"账号配置","密码")
	self.临时文件=nil
	 self.写入信息=nil
end

function 系统处理类:设置传说物品(id)
	--修炼
	local 任务id=(玩家数据[id].角色:取任务(13)or 玩家数据[id].角色:取任务(501))
	if 任务id~=0 and 任务数据[任务id]~=nil and 任务数据[任务id].传说==nil then
		任务数据[任务id].传说=1
		if 任务数据[任务id].等级==nil then
			玩家数据[id].道具:给予道具(id,任务数据[任务id].物品,1,30)
			常规提示(id,"#Y你获得了传说中的#R"..任务数据[任务id].物品)
			发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..任务数据[任务id].物品})
		else
			玩家数据[id].道具:取随机装备1(id,任务数据[任务id].等级,任务数据[任务id].物品)
			常规提示(id,"#Y你获得了传说中的#R"..任务数据[任务id].物品)
			发送数据(玩家数据[id].连接id,38,{内容="你得到了#R/"..任务数据[任务id].物品})
		end
	end
end

function 系统处理类:显示(x,y) end
return 系统处理类
