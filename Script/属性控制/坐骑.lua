--======================================================================--
--	☆ 作者：飞蛾扑火 QQ：1415559882
--======================================================================--
local floor = math.floor
local ceil  = math.ceil
local jnsss = require("script/角色处理类/技能类")
local random = 取随机数
local insert = table.insert
local cfs    = 删除重复
local rand   = 取随机小数
-- local 五行_ = {"金","木","水","火","土"}
local 内存类_坐骑 = class()

function 内存类_坐骑:初始化()
	self.等级 = 0
	self.名称 = 0
	self.模型 = 0
	self.认证码 = ""
	self.初始成长 = 0
	self.额外成长 = 0
	self.坐骑技能 = {}
	self.种类 = ""
	self.饰品 = nil
	self.饰品2 = nil
	self.染色组 = 0
	self.染色方案 = nil
	self.参战信息 = nil
	self.当前经验 = 0
	self.最大经验 = 0
	self.主属性 = nil
	self.可用技能点 = 0
	self.统御召唤兽 = {}
	self.统御召唤兽[1]=nil
	self.统御召唤兽[2]=nil
end

function 内存类_坐骑:置新对象(模型,名称,类型,属性,id)
	等级 = 0
	self.模型 = 模型
	self.名称 = 名称 or 模型
	self.认证码 =id.."_"..os.time().."_"..取随机数(1000,9999999).."_"..随机序列
	self.坐骑技能 = {
					忠贯日月=0,
					正身清心=0,
					延年益寿=0,
					开天辟地=0,
					破釜沉州=0,
					大浪淘沙=0,
					炫火乱舞=0,
					金刚护身=0,
					偃旗息鼓=0,
					铜墙铁壁=0,
					水来土掩=0,
					飞火流星=0,
					乾坤借速=0,
				}
	self.初始成长 =GetPreciseDecimal(取随机数(11700,13433)/10000,4)
	self.额外成长 = 0
	self.饱食度 = 80
	self.好感度 = 80
	self.主属性 = nil
	self.种类 = "坐骑"
	self:刷新信息("1")
end

function 内存类_坐骑:升级()
	self.等级 = self.等级 + 1
	self.当前经验 = self.当前经验 - self.最大经验
	self:刷新信息("1")
end

function 内存类_坐骑:降级(级数)
	self.等级 = self.等级 - 级数

	self:刷新信息("1")
end

function 内存类_坐骑:添加技能(名称)
	local jn = jnsss()
	jn:置对象(名称)
	self.坐骑技能[#self.坐骑技能+1] = jn
end

function 内存类_坐骑:替换技能(名称)
	local jn = jnsss()
	jn:置对象(名称)
	self.坐骑技能[random(1,#self.坐骑技能)] = jn
end

function 内存类_坐骑:刷新信息(是否,体质,魔力)
	self.等级 = self.等级
	if self.等级 <= 175 then
		self.最大经验 = self:取经验(self.等级)
	end
end

function 内存类_坐骑:取经验(lv)
	local exp={
			50,200,450,800,1250,1800,2450,3250,4050,5000,6050,7200,8450,9800,11250,12800,14450,16200,18050,20000,22050,24200,
			26450,28800,31250,33800,36450,39200,42050,45000,48050,51200,54450,57800,61250,64800,68450,72200,76050,80000,84050,
			88200,92450,96800,101250,105800,110450,115200,120050,125000,130050,135200,140450,145800,151250,156800,162450,
			168200,174050,180000,186050,192200,198450,204800,211250,217800,224450,231200,238050,245000,252050,259200,266450,
			273800,281250,288800,296450,304200,312050,320000,328050,336200,344450,352800,361250,369800,378450,387200,396050,
			405000,414050,423200,432450,441800,451250,460800,470450,480200,490050,500000,510050,520200,530450,540800,551250,
			561800,572450,583200,594050,605000,616050,627200,638450,649800,661250,672800,684450,696200,708050,720000,732050,
			744200,756450,768800,781250,793800,806450,819200,832050,845000,858050,871200,884450,897800,911250,924800,938450,
			952200,966050,980000,994050,1008200,1022450,1036800,1051250,1065800,1080450,1095200,1110050,1125000,1140050,1155200,
			1170450,1185800,1201250,1216800,1232450,1248200,1264050,1280000,1300000,1340000,1380000,1420000,1460000,1500000,1540000,
			1580000,1700000,1780000,1820000,1940000,2400000,2880000,3220000,4020000,4220000,4420000,4620000,5220000,5820000,6220000,
			7020000,8020000,9020000
		}
	return exp[lv+1]
end

return 内存类_坐骑