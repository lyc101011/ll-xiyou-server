-- @Author: baidwwy
-- @Date:   2024-09-10 12:14:14
-- @Last Modified by:   baidwwy
-- @Last Modified time: 2025-04-12 03:25:37
local 自动回收类 = class()
local Q_直接回收={
    {名称="魔兽要诀",价格=350000},
    {名称="高级魔兽要诀",价格=5000000},
    {名称="上古锻造图策",价格=200000},
    {名称="炼妖石",价格=50000},
    {名称="月华露",价格=100000},
    {名称="彩果",价格=500000},
    {名称="金银锦盒",价格=10000},
    {名称="金柳露",价格=150000},
    {名称="超级金柳露",价格=300000},
    {名称="召唤兽内丹",价格=300000},
    {名称="高级召唤兽内丹",价格=2500000},
    {名称="青龙石",价格=99999},
    {名称="白虎石",价格=99999},
    {名称="朱雀石",价格=99999},
    {名称="玄武石",价格=99999},
    {名称="分解符",价格=10000},
    {名称="符石卷轴",价格=50000},
    {名称="未激活的符石",价格=2000000},
    {名称="未激活的星石",价格=200000},
    {名称="净瓶玉露",价格=300000},
    {名称="超级净瓶玉露",价格=600000},
    {名称="藏宝图",价格=25555},
    {名称="特赦令牌",价格=5000000},
    {名称="摇钱树苗",价格=1000000},
    {名称="定魂珠",价格=2000000},
    {名称="金刚石",价格=2000000},
    {名称="夜光珠",价格=800000},
    {名称="龙鳞",价格=100000},
    {名称="避水珠",价格=100000},
    {名称="附魔宝珠",价格=20000000},
    {名称="珍珠",价格=666666},
    {名称="战魄",价格=27000000},
        {可叠加=false,名称="芝麻沁香元宵",价格=500000},
        {可叠加=false,名称="桂花酒酿元宵",价格=500000},
        {可叠加=false,名称="蜜糖腰果元宵",价格=500000},
        {可叠加=false,名称="山楂拔丝元宵",价格=500000},
        {可叠加=false,名称="滑玉莲蓉元宵",价格=500000},
                {可叠加=false,名称="细磨豆沙元宵",价格=500000},
        {可叠加=false,名称="炼兽真经",价格=3000000},
    {名称="中级清灵仙露",价格=300000},
    {名称="初级清灵仙露",价格=50000},
        {名称="吸附石",价格=150000},
            {名称="分解符",价格=10000},
        {名称="易经丹",价格=2000000},
                {名称="易经丹",价格=2000000},
                        {价格 = 880000,  名称 = "玄灵珠·破军"},
        {价格 = 880000, 名称 = "玄灵珠·空灵"},
        {价格 = 880000,  名称 = "玄灵珠·回春"},
        {价格 = 880000, 名称 = "玄灵珠·噬魂"},
} --最多不超45

local Q_选项回收价格={
    装备 = {[50]=50000,[60]=200000,[70]=300000,[80]=800000,[90]=800000,[100]=800000,[110]=800000,[120]=800000,[130]=800000,[140]=800000}, --不达到50级装备不给银子。[60]就是60级
    灵饰 = {[60]=400000,[80]=700000,[100]=1000000,[120]=2000000,[140]=3000000},
    宝石 = 100000, --1级价格、2级价格、3级价格
    星辉石 = 150000,
    灵犀玉 = {100000,500000,8000000},
    装备书 = {[60]=100000,[70]=100000,[80]=100000,[90]=100000,[100]=2000000,[110]=2000000,[120]=3000000,[130]=3500000,[140]=5000000,[150]=15000000},
    百炼精铁 ={[60]=100000,[70]=100000,[80]=100000,[90]=100000,[100]=300000,[110]=400000,[120]=1000000,[130]=1800000,[140]=2000000,[150]=21000000},
    灵饰书 = {[60]=800000,[80]=2000000,[100]=6000000,[120]=10000000,[140]=18000000},
    元灵晶石 ={[60]=500000,[80]=2000000,[100]=5000000,[120]=7000000,[140]=7000000},
    怪物卡片 = {10000,15000,20000,25000,30000,35000,40000,45000,50000,55000},
    精魄灵石 = 10000
}

function 自动回收类:初始化(id) --羔羊回收，严重注意：游戏里不可有物品价格比这里面低，例：某商店神兜兜价格100，这里回收价1000。就可以通过无限买刷银子
    self.数字id=id
end

function 自动回收类:加载数据(账号,id)
    self.数字id=id
    if f函数.文件是否存在([[data/]]..账号..[[/]]..id..[[/自动回收.txt]])==false then
        self:检查回收数据()
        写出文件([[data/]]..账号..[[/]]..id..[[/自动回收.txt]],table.tostring(self.数据))
    else
        self.数据=table.loadstring(读入文件([[data/]]..账号..[[/]]..id..[[/自动回收.txt]]))
    end
end

function 自动回收类:打开界面()
    local data = table.copy(self.数据)
    local abc = {}
    for k,v in pairs(Q_直接回收) do
        abc[k] = v.名称
    end
    data.物品表 = table.copy(abc)
    发送数据(玩家数据[self.数字id].连接id,3725,data)
end

function 自动回收类:保存设置(data) --不用在角色:存档()保存，这里直接保存了
    self.数据 = table.copy(data)
    写出文件([[data/]]..玩家数据[self.数字id].角色.账号..[[/]]..self.数字id.."/自动回收.txt",table.tostring(self.数据))
    常规提示(self.数字id,"#Y/保存自动回收配置成功！")
end

function 自动回收类:检查回收数据()
    if self.数据==nil then
        self.数据={}
        self.数据.装备 = "回收"
        self.数据.灵饰 = "回收"
        self.数据.宝石 = "回收"
        self.数据.星辉 = "回收"
        self.数据.灵犀玉 = "回收"
        self.数据.装备书 = "回收"
        self.数据.百炼精铁 = "回收"
        self.数据.灵饰书 = "回收"
        self.数据.元灵晶石 = "回收"
        self.数据.怪物卡片 = "回收"
        self.数据.宝宝装备 = "回收"
        self.数据.打钩组={}
        for an=1,50 do
            self.数据.打钩组[an]=false
        end
    end
end

function 自动回收类:取回收数据()
    return self.数据
end

function 自动回收类:取Q_选项回收价格()
    return Q_选项回收价格
end

function 自动回收类:取Q_直接回收()
    return Q_直接回收
end

function 自动回收类:是否勾选(bh)
    return self.数据.打钩组[bh]
end

return 自动回收类
